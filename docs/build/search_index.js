var documenterSearchIndex = {"docs":
[{"location":"api/power_flow.html#PowerFlow模块-API文档","page":"PowerFlow模块","title":"PowerFlow模块 API文档","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"PowerFlow模块提供了电力系统潮流计算的完整功能集，包括交流潮流计算、直流潮流计算、不平衡潮流计算以及相关的辅助功能。本模块支持常规CPU计算和GPU加速计算。","category":"page"},{"location":"api/power_flow.html#模块概述","page":"PowerFlow模块","title":"模块概述","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"PowerFlow模块实现了多种潮流计算算法，包括牛顿-拉夫森法、直流潮流计算等，并提供了丰富的电网模型构建和结果处理功能。该模块可用于分析平衡和不平衡电力系统的稳态运行特性。","category":"page"},{"location":"api/power_flow.html#主要功能","page":"PowerFlow模块","title":"主要功能","text":"","category":"section"},{"location":"api/power_flow.html#潮流计算主函数","page":"PowerFlow模块","title":"潮流计算主函数","text":"","category":"section"},{"location":"api/power_flow.html#交流潮流计算","page":"PowerFlow模块","title":"交流潮流计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"runpf(case, opt=Dict())","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"执行交流潮流计算的主函数。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"case: 电力系统案例数据\nopt: 可选参数设置\n返回: 包含潮流计算结果的数据结构","category":"page"},{"location":"api/power_flow.html#直流潮流计算","page":"PowerFlow模块","title":"直流潮流计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"rundcpf(case, opt=Dict())","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"执行直流潮流计算的主函数。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"case: 电力系统案例数据\nopt: 可选参数设置\n返回: 包含直流潮流计算结果的数据结构","category":"page"},{"location":"api/power_flow.html#不平衡潮流计算","page":"PowerFlow模块","title":"不平衡潮流计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"runupf(case, jpc_3ph, gs_eg, bs_eg, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"执行不平衡潮流计算的主函数。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"case: 平衡系统案例数据\njpc_3ph: 三相系统数据\ngs_eg, bs_eg: 接地导纳参数\nopt: 可选参数设置\n返回: 包含不平衡潮流计算结果的数据结构","category":"page"},{"location":"api/power_flow.html#快速解耦潮流计算","page":"PowerFlow模块","title":"快速解耦潮流计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"runhpf(jpc, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"执行快速解耦潮流计算的主函数。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"jpc: 电力系统案例数据\nopt: 可选参数设置\n返回: 包含潮流计算结果的数据结构","category":"page"},{"location":"api/power_flow.html#求解器函数","page":"PowerFlow模块","title":"求解器函数","text":"","category":"section"},{"location":"api/power_flow.html#牛顿-拉夫森法求解器","page":"PowerFlow模块","title":"牛顿-拉夫森法求解器","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"newtonpf(baseMVA, bus, gen, branch, Ybus, Yf, Yt, Vm, Va, ref, pv, pq, mpopt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"使用牛顿-拉夫森法求解交流潮流方程。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"baseMVA: 基准功率\nbus, gen, branch: 电力系统组件数据\nYbus, Yf, Yt: 节点导纳矩阵和支路导纳矩阵\nVm, Va: 初始电压幅值和相角\nref, pv, pq: 节点类型索引\nmpopt: 求解器选项\n返回: 求解结果","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"newtonpf_gpu(baseMVA, bus, gen, branch, Ybus, Yf, Yt, Vm, Va, ref, pv, pq, mpopt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"使用GPU加速的牛顿-拉夫森法求解交流潮流方程。","category":"page"},{"location":"api/power_flow.html#直流潮流求解器","page":"PowerFlow模块","title":"直流潮流求解器","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"newtondcpf(baseMVA, bus, gen, branch, B, Pbus, Va0, ref, pv, pq, mpopt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"使用牛顿法求解直流潮流方程。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"newtondcpf_sp(baseMVA, bus, gen, branch, B, Pbus, Va0, ref, pv, pq, mpopt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"使用稀疏矩阵技术的牛顿法求解直流潮流方程。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"dcpf(B, Pbus, Va0, ref, pv, pq, mpopt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"基本直流潮流求解函数。","category":"page"},{"location":"api/power_flow.html#电网模型构建函数","page":"PowerFlow模块","title":"电网模型构建函数","text":"","category":"section"},{"location":"api/power_flow.html#节点导纳矩阵构建","page":"PowerFlow模块","title":"节点导纳矩阵构建","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"makeYbus(baseMVA, bus, branch)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"构建节点导纳矩阵和支路导纳矩阵。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"baseMVA: 基准功率\nbus, branch: 节点和支路数据\n返回: Ybus, Yf, Yt 导纳矩阵","category":"page"},{"location":"api/power_flow.html#直流潮流B矩阵构建","page":"PowerFlow模块","title":"直流潮流B矩阵构建","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"makeBdc(baseMVA, bus, branch)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"构建直流潮流计算所需的B矩阵。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"baseMVA: 基准功率\nbus, branch: 节点和支路数据\n返回: B矩阵和相关数据","category":"page"},{"location":"api/power_flow.html#功率注入计算","page":"PowerFlow模块","title":"功率注入计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"makeSbus(baseMVA, bus, gen, Vm, load, pvarray; dc=false, Sg=nothing, return_derivative=false)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"计算节点功率注入。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"baseMVA: 基准功率\nbus, gen: 节点和发电机数据\nVm: 电压幅值\nload: 负荷数据\npvarray: 光伏阵列数据\n返回: 节点功率注入向量","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"makeSbus_gpu(baseMVA, bus_gpu, gen_gpu, gen, Vm, load_gpu, load, pvarray_gpu, pvarray; dc=false, Sg=nothing, return_derivative=false)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"使用GPU计算节点功率注入。","category":"page"},{"location":"api/power_flow.html#电网元素构建函数","page":"PowerFlow模块","title":"电网元素构建函数","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"calculate_bus(net, jpc, sequence, slack_bus, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"构建节点数据结构。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"calculate_line_parameter(net, jpc, sequence, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"计算线路参数。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"build_gen(net, jpc)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"构建发电机数据结构。","category":"page"},{"location":"api/power_flow.html#节点类型处理","page":"PowerFlow模块","title":"节点类型处理","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"bustypes(bus, gen)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"确定节点类型（参考节点、PV节点、PQ节点）。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"dcbustypes(bus, gen)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"确定直流潮流计算的节点类型。","category":"page"},{"location":"api/power_flow.html#结果处理函数","page":"PowerFlow模块","title":"结果处理函数","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"pfsoln(baseMVA, bus, gen, branch, Ybus, Yf, Yt, V, ref, pv, pq, mpopt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"处理交流潮流计算结果。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"dcpfsoln(baseMVA, bus, gen, branch, Bbus, Bf, Pbusinj, V, ref, pv, pq, mpopt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"处理直流潮流计算结果。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"process_result(results, isolated, file_path)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"处理潮流计算结果并可选保存到文件。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"merge_results(results, isolated)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"合并孤岛的潮流计算结果。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"write_system_summary(f, mpc, area, isolated)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"生成系统摘要报告。","category":"page"},{"location":"api/power_flow.html#辅助函数","page":"PowerFlow模块","title":"辅助函数","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"dSbus_dV(Ybus, V)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"计算功率对电压的雅可比矩阵。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"eliminate_element(jpc)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"消除电网中的特定元素。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"total_load(bus, load)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"计算系统总负荷。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"process_pv_acsystem(pv_acsystem, pv_acsystem_bus, pv_acsystem_gen, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"处理光伏交流系统数据。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"compare_voltage_results(results, case, reference_file; tolerance_mag=1e-4, tolerance_ang=1e-3)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"比较潮流计算结果与参考结果。","category":"page"},{"location":"api/power_flow.html#GPU加速计算函数","page":"PowerFlow模块","title":"GPU加速计算函数","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"gpu_gmres(A, b, x0; tol=1e-6, maxiter=100, restart=20, M=nothing)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"使用GPU加速的GMRES求解线性方程组。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"makeSdzip(Sbusd, V, bus, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"计算ZIP负荷模型的功率注入。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"makeSdzip_gpu(Sbusd, V, bus, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"使用GPU计算ZIP负荷模型的功率注入。","category":"page"},{"location":"api/power_flow.html#设置与预处理","page":"PowerFlow模块","title":"设置与预处理","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"settings(opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"设置潮流计算的参数。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"runprepf(mpc, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"执行潮流计算的预处理。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"dc_preprocess(mpc, opt)","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"执行直流潮流计算的预处理。","category":"page"},{"location":"api/power_flow.html#数据结构","page":"PowerFlow模块","title":"数据结构","text":"","category":"section"},{"location":"api/power_flow.html#Sd","page":"PowerFlow模块","title":"Sd","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"表示ZIP负荷模型的数据结构。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"mutable struct Sd\n    z::Vector{ComplexF64}  # 阻抗负荷\n    i::Vector{ComplexF64}  # 电流负荷\n    p::Vector{ComplexF64}  # 功率负荷\nend","category":"page"},{"location":"api/power_flow.html#Sd_gpu","page":"PowerFlow模块","title":"Sd_gpu","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"表示GPU计算中的ZIP负荷模型数据结构。","category":"page"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"mutable struct Sd_gpu\n    z::CuVector{ComplexF64}  # GPU上的阻抗负荷\n    i::CuVector{ComplexF64}  # GPU上的电流负荷\n    p::CuVector{ComplexF64}  # GPU上的功率负荷\nend","category":"page"},{"location":"api/power_flow.html#使用示例","page":"PowerFlow模块","title":"使用示例","text":"","category":"section"},{"location":"api/power_flow.html#基本交流潮流计算","page":"PowerFlow模块","title":"基本交流潮流计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"using PowerFlow\n\n# 加载案例数据\ncase = load_case(\"case14.m\")\n\n# 执行潮流计算\nresults = runpf(case)\n\n# 分析结果\nprintln(\"收敛状态: \", results.success)\nprintln(\"迭代次数: \", results.iterations)","category":"page"},{"location":"api/power_flow.html#直流潮流计算-2","page":"PowerFlow模块","title":"直流潮流计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"using PowerFlow\n\n# 加载案例数据\ncase = load_case(\"case14.m\")\n\n# 执行直流潮流计算\nresults = rundcpf(case)\n\n# 分析结果\nprintln(\"收敛状态: \", results.success)","category":"page"},{"location":"api/power_flow.html#GPU加速计算","page":"PowerFlow模块","title":"GPU加速计算","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"using PowerFlow\nusing CUDA\n\n# 确保CUDA可用\nif CUDA.functional()\n    # 加载案例数据\n    case = load_case(\"case14.m\")\n    \n    # 设置GPU选项\n    opt = Dict(\"PF\" => Dict(\"alg\" => \"NR\", \"use_gpu\" => true))\n    \n    # 执行GPU加速的潮流计算\n    results = runpf(case, opt)\n    \n    println(\"使用GPU计算，迭代次数: \", results.iterations)\nelse\n    println(\"CUDA不可用，无法执行GPU加速计算\")\nend","category":"page"},{"location":"api/power_flow.html#注意事项","page":"PowerFlow模块","title":"注意事项","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"GPU加速计算需要安装CUDA工具包和兼容的GPU硬件。\n大型电网模型计算时，建议使用稀疏矩阵技术以提高计算效率。\n对于不平衡系统，请使用runupf函数并提供三相系统数据。\n结果比较功能可用于验证计算结果与其他软件（如ETAP）的一致性。","category":"page"},{"location":"api/power_flow.html#参考文献","page":"PowerFlow模块","title":"参考文献","text":"","category":"section"},{"location":"api/power_flow.html","page":"PowerFlow模块","title":"PowerFlow模块","text":"Power System Analysis, J.J. Grainger and W.D. Stevenson Jr.\nPower System Load Flow Analysis, J.D. Glover, M.S. Sarma, and T.J. Overbye.\nMATPOWER: A MATLAB Power System Simulation Package, R.D. Zimmerman, C.E. Murillo-Sánchez, and R.J. Thomas.","category":"page"},{"location":"main.html#DistributionPowerFlow.jl-电力系统潮流计算工具","page":"主程序说明","title":"DistributionPowerFlow.jl - 电力系统潮流计算工具","text":"","category":"section"},{"location":"main.html#简介","page":"主程序说明","title":"简介","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"DistributionPowerFlow.jl是一个用Julia语言开发的开源电力系统潮流计算工具包。它提供了完整的交流、直流以及交直流混合系统的潮流计算功能,采用高效的数值计算方法,可以处理从小型测试系统到大规模实际电网的各类潮流计算问题。","category":"page"},{"location":"main.html#功能特点","page":"主程序说明","title":"功能特点","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"支持多种潮流计算方法\n交流潮流(Newton-Raphson法)\n直流潮流\n交直流混合潮流\n最优潮流(OPF)\n时序潮流\n高性能计算\n稀疏矩阵优化\n并行计算支持\nGPU加速\n高效求解算法\n完整的电力系统建模\n发电机模型\n变压器模型\n输电线路模型\n负荷模型\n直流设备模型\n丰富的数据接口\nExcel数据导入导出\nIEEE通用格式支持\n自定义数据格式扩展","category":"page"},{"location":"main.html#安装方法","page":"主程序说明","title":"安装方法","text":"","category":"section"},{"location":"main.html#使用包管理器安装","page":"主程序说明","title":"使用包管理器安装","text":"","category":"section"},{"location":"main.html#从源码安装","page":"主程序说明","title":"从源码安装","text":"","category":"section"},{"location":"main.html#快速开始","page":"主程序说明","title":"快速开始","text":"","category":"section"},{"location":"main.html#基本使用示例","page":"主程序说明","title":"基本使用示例","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"using PowerFlow\n\n# 导入测试系统\njpc = loadcase(\"case14\")  # IEEE 14节点系统\n\n# 设置计算选项\nopt = PowerFlow.options()\nopt[\"PF\"][\"ALG\"] = \"NR\"      # 使用牛顿-拉夫森法\nopt[\"PF\"][\"TOL\"] = 1e-6      # 收敛容差\n\n# 执行潮流计算\nresults = runpf(jpc, opt)\n\n# 显示结果\nprint_results(results)","category":"page"},{"location":"main.html#交直流混合系统示例","page":"主程序说明","title":"交直流混合系统示例","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"# 导入系统信息\ncase = TimeSeriesPowerFlow.load_julia_power_data(file_path)\n\n# 设置混合潮流选项\nopt = PowerFlow.options()\nopt[\"PF\"][\"HYBRID\"] = true\n\n# 执行混合潮流计算\nresults = runhpf(jpc, opt)","category":"page"},{"location":"main.html#主要模块","page":"主程序说明","title":"主要模块","text":"","category":"section"},{"location":"main.html#1.-核心计算模块","page":"主程序说明","title":"1. 核心计算模块","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"潮流计算引擎\n数值求解器\n收敛控制","category":"page"},{"location":"main.html#2.-系统建模模块","page":"主程序说明","title":"2. 系统建模模块","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"网络模型\n设备模型\n控制模型","category":"page"},{"location":"main.html#3.-数据处理模块","page":"主程序说明","title":"3. 数据处理模块","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"数据导入导出\n格式转换\n结果处理","category":"page"},{"location":"main.html#4.-分析工具模块","page":"主程序说明","title":"4. 分析工具模块","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"网络分析\n结果可视化\n报告生成","category":"page"},{"location":"main.html#技术特性","page":"主程序说明","title":"技术特性","text":"","category":"section"},{"location":"main.html#1.-高性能设计","page":"主程序说明","title":"1. 高性能设计","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"采用稀疏矩阵存储\n优化的数值计算算法\n并行计算支持\nGPU加速能力","category":"page"},{"location":"main.html#2.-可扩展架构","page":"主程序说明","title":"2. 可扩展架构","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"模块化设计\n插件系统\n自定义接口\n灵活配置","category":"page"},{"location":"main.html#3.-稳定性保证","page":"主程序说明","title":"3. 稳定性保证","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"完整的错误处理\n数值稳定性控制\n收敛性保障\n自动恢复机制","category":"page"},{"location":"main.html#应用场景","page":"主程序说明","title":"应用场景","text":"","category":"section"},{"location":"main.html#1.-电网规划","page":"主程序说明","title":"1. 电网规划","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"网络扩展分析\n容量规划\n可靠性评估","category":"page"},{"location":"main.html#2.-运行分析","page":"主程序说明","title":"2. 运行分析","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"实时潮流监测\n安全校验\n极限功率分析","category":"page"},{"location":"main.html#3.-科研教学","page":"主程序说明","title":"3. 科研教学","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"算法研究\n教学演示\n案例分析","category":"page"},{"location":"main.html#性能指标","page":"主程序说明","title":"性能指标","text":"","category":"section"},{"location":"main.html#1.-计算效率","page":"主程序说明","title":"1. 计算效率","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"IEEE 118节点系统: <0.1秒\nIEEE 300节点系统: <0.3秒\n3000节点系统: <3秒","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"(基于标准PC配置)","category":"page"},{"location":"main.html#2.-内存占用","page":"主程序说明","title":"2. 内存占用","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"小型系统(<100节点): <100MB\n中型系统(100-1000节点): <500MB\n大型系统(>1000节点): <2GB","category":"page"},{"location":"main.html#3.-收敛特性","page":"主程序说明","title":"3. 收敛特性","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"一般情况2-4次迭代\n最大迭代次数可配置\n支持多种收敛控制策略","category":"page"},{"location":"main.html#配置要求","page":"主程序说明","title":"配置要求","text":"","category":"section"},{"location":"main.html#软件环境","page":"主程序说明","title":"软件环境","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"Julia 1.6+\n操作系统: Windows/Linux/MacOS","category":"page"},{"location":"main.html#硬件推荐配置","page":"主程序说明","title":"硬件推荐配置","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"CPU: 4核以上\n内存: 8GB以上\nGPU(可选): CUDA兼容显卡","category":"page"},{"location":"main.html#许可证","page":"主程序说明","title":"许可证","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"本软件采用MIT许可证。详见LICENSE文件。","category":"page"},{"location":"main.html#贡献指南","page":"主程序说明","title":"贡献指南","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"我们欢迎社区贡献,包括但不限于:","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"Bug修复\n功能增强\n文档改进\n性能优化","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"详细贡献指南请参见CONTRIBUTING.md。","category":"page"},{"location":"main.html#版本历史","page":"主程序说明","title":"版本历史","text":"","category":"section"},{"location":"main.html#v1.0.0-(2025)","page":"主程序说明","title":"v1.0.0 (2025)","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"<!– - 首次发布","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"基本潮流计算功能\n交直流混合系统支持","category":"page"},{"location":"main.html#v1.1.0-(2024-02)","page":"主程序说明","title":"v1.1.0 (2024-02)","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"添加GPU支持\n优化大规模系统性能\n改进收敛特性 –>","category":"page"},{"location":"main.html#常见问题","page":"主程序说明","title":"常见问题","text":"","category":"section"},{"location":"main.html#1.-安装相关","page":"主程序说明","title":"1. 安装相关","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"Q: 安装时依赖包冲突如何解决? A: 可以尝试以下步骤:","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"更新包管理器\n清理本地缓存\n检查版本兼容性","category":"page"},{"location":"main.html#2.-使用相关","page":"主程序说明","title":"2. 使用相关","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"Q: 计算不收敛怎么处理? A: 建议:","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"检查输入数据\n调整收敛参数\n尝试不同初始值","category":"page"},{"location":"main.html#3.-性能相关","page":"主程序说明","title":"3. 性能相关","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"Q: 大系统计算速度慢? A: 可以:","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"启用GPU加速\n优化求解器参数\n使用并行计算","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"<!– ## 联系方式","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"项目主页: https://github.com/username/PowerFlow.jl\n问题报告: https://github.com/username/PowerFlow.jl/issues\n邮件支持: support@powerflow.org –>","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"<!– ## 致谢","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"感谢以下机构/个人的支持:","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"XXX大学电气工程实验室\nYYY研究所\n所有贡献者 –>","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"<!– ## 参考文献","category":"page"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"[参考文献1]\n[参考文献2]\n[参考文献3] –>","category":"page"},{"location":"main.html#附录","page":"主程序说明","title":"附录","text":"","category":"section"},{"location":"main.html#A.-数据格式说明","page":"主程序说明","title":"A. 数据格式说明","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"<!– 详见data_format.md –>","category":"page"},{"location":"main.html#B.-配置参数列表","page":"主程序说明","title":"B. 配置参数列表","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"<!– 详见configuration.md –>","category":"page"},{"location":"main.html#C.-错误代码说明","page":"主程序说明","title":"C. 错误代码说明","text":"","category":"section"},{"location":"main.html","page":"主程序说明","title":"主程序说明","text":"<!– 详见error_codes.md ``` –>","category":"page"},{"location":"api/utils.html#Utils-模块-API文档","page":"Utils模块","title":"Utils 模块 API文档","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"Utils模块提供了电力系统分析中的各种辅助功能，包括数据转换、拓扑分析、孤岛提取等功能。这些工具函数支持PowerFlow模块的核心功能，帮助处理电力系统数据的各种特殊情况。","category":"page"},{"location":"api/utils.html#模块概述","page":"Utils模块","title":"模块概述","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"Utils模块包含了电力系统数据处理的辅助工具，主要涉及以下方面：","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"内部/外部编号转换\n孤岛识别与提取\n拓扑分析\n数据提取与转换\n虚拟节点处理","category":"page"},{"location":"api/utils.html#主要功能","page":"Utils模块","title":"主要功能","text":"","category":"section"},{"location":"api/utils.html#内部/外部编号转换","page":"Utils模块","title":"内部/外部编号转换","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"ext2int(jpc)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"将外部编号转换为内部连续编号。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"jpc: 电力系统案例数据\n返回: 转换后的案例数据和内部到外部的映射","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"int2ext(i2e, results)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"将内部编号转换回外部编号。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"i2e: 内部到外部的映射\nresults: 使用内部编号的结果数据\n返回: 使用外部编号的结果数据","category":"page"},{"location":"api/utils.html#孤岛识别与提取","page":"Utils模块","title":"孤岛识别与提取","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"find_islands(jpc)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"在电力系统中识别电气孤岛。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"jpc: 电力系统案例数据\n返回: 孤岛信息，包括每个孤岛中的节点列表","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"extract_islands(jpc)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"从电力系统中提取各个孤岛的子系统。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"jpc: 电力系统案例数据\n返回: 包含各个孤岛子系统的列表","category":"page"},{"location":"api/utils.html#拓扑分析","page":"Utils模块","title":"拓扑分析","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"create_node_mapping(case)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"为节点创建编号映射，检测重复节点。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"case: JuliaPowerCase格式的电力系统数据\n返回: 节点名称到ID的映射字典","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"resolve_node_mapping(node_id, node_merge_map)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"递归解析节点映射，确保多层合并正确处理。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"node_id: 节点ID\nnode_merge_map: 节点合并映射\n返回: 解析后的节点ID","category":"page"},{"location":"api/utils.html#数据提取与转换","page":"Utils模块","title":"数据提取与转换","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"extract_data(worksheet, start_row, end_row, start_col, end_col)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"从Excel工作表中提取数据。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"worksheet: Excel工作表对象\nstart_row, end_row: 起始和结束行\nstart_col, end_col: 起始和结束列\n返回: 提取的数据数组","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"JuliaPowerCase2Jpc(case)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"将JuliaPowerCase格式转换为JPC格式。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"case: JuliaPowerCase格式的电力系统数据\n返回: JPC格式的电力系统数据","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"JuliaPowerCase2Jpc_3ph(case)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"将JuliaPowerCase格式转换为三相JPC格式。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"case: JuliaPowerCase格式的电力系统数据\n返回: 三相JPC格式的电力系统数据","category":"page"},{"location":"api/utils.html#虚拟节点处理","page":"Utils模块","title":"虚拟节点处理","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"merge_virtual_nodes(case)","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"合并虚拟节点两侧的节点，去除虚拟节点和虚拟连接。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"case: JuliaPowerCase格式的电力系统数据\n返回: 更新后的case对象，不含虚拟节点和虚拟连接","category":"page"},{"location":"api/utils.html#索引常量定义","page":"Utils模块","title":"索引常量定义","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"idx_bus()","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"返回母线数据列的索引常量。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"idx_gen()","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"返回发电机数据列的索引常量。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"idx_branch()","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"返回支路数据列的索引常量。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"idx_brch()","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"返回支路数据列的索引常量（兼容性别名）。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"idx_cost()","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"返回成本数据列的索引常量。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"idx_dcline()","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"返回直流线路数据列的索引常量。","category":"page"},{"location":"api/utils.html#数据结构","page":"Utils模块","title":"数据结构","text":"","category":"section"},{"location":"api/utils.html#JPC","page":"Utils模块","title":"JPC","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"表示标准电力系统案例数据的结构。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"mutable struct JPC\n    baseMVA::Float64\n    busAC::Matrix{Float64}\n    genAC::Matrix{Float64}\n    branchAC::Matrix{Float64}\n    loadAC::Matrix{Float64}\n    # 其他字段...\nend","category":"page"},{"location":"api/utils.html#JPC_3ph","page":"Utils模块","title":"JPC_3ph","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"表示三相电力系统案例数据的结构。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"mutable struct JPC_3ph\n    baseMVA::Float64\n    basef::Float64\n    busAC::Matrix{Float64}\n    genAC::Matrix{Float64}\n    branchAC::Matrix{Float64}\n    loadAC::Matrix{Float64}\n    # 三相特定字段...\nend","category":"page"},{"location":"api/utils.html#MicrogridPlanningProblem","page":"Utils模块","title":"MicrogridPlanningProblem","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"表示微电网规划问题的结构。","category":"page"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"mutable struct MicrogridPlanningProblem\n    # 常数\n    bigM::Float64\n    \n    # 规划参数\n    nPV::Int\n    nBESS::Int\n    DeltaPV::Float64\n    DeltaBESS::Float64\n    # 其他字段...\nend","category":"page"},{"location":"api/utils.html#使用示例","page":"Utils模块","title":"使用示例","text":"","category":"section"},{"location":"api/utils.html#内部/外部编号转换-2","page":"Utils模块","title":"内部/外部编号转换","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"using PowerFlow\n\n# 加载案例数据\ncase = load_case(\"case14.m\")\n\n# 转换为内部编号\ninternal_case, i2e = ext2int(case)\n\n# 执行潮流计算\nresults = runpf(internal_case)\n\n# 转换回外部编号\nexternal_results = int2ext(i2e, results)","category":"page"},{"location":"api/utils.html#孤岛识别与处理","page":"Utils模块","title":"孤岛识别与处理","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"using PowerFlow\n\n# 加载案例数据\ncase = load_case(\"case_with_islands.m\")\n\n# 识别孤岛\nislands_info = find_islands(case)\nprintln(\"系统中包含 $(length(islands_info)) 个孤岛\")\n\n# 提取孤岛子系统\nisland_subsystems = extract_islands(case)\n\n# 对每个孤岛单独进行潮流计算\nfor (i, island) in enumerate(island_subsystems)\n    println(\"计算孤岛 $i 的潮流...\")\n    results = runpf(island)\n    # 处理结果...\nend\n\n# 合并结果\nmerged_results = merge_results(results_list, islands_info)","category":"page"},{"location":"api/utils.html#虚拟节点处理-2","page":"Utils模块","title":"虚拟节点处理","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"using PowerFlow\n\n# 加载包含虚拟节点的案例\ncase = load_case(\"case_with_virtual_nodes.m\")\n\n# 合并虚拟节点\ncase_without_virtual = merge_virtual_nodes(case)\n\n# 执行潮流计算\nresults = runpf(case_without_virtual)","category":"page"},{"location":"api/utils.html#数据格式转换","page":"Utils模块","title":"数据格式转换","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"using PowerFlow\n\n# 加载JuliaPowerCase格式的数据\ncase = load_julia_power_case(\"my_system.json\")\n\n# 转换为JPC格式\njpc = JuliaPowerCase2Jpc(case)\n\n# 执行潮流计算\nresults = runpf(jpc)\n\n# 对于三相系统\njpc_3ph = JuliaPowerCase2Jpc_3ph(case)\nresults_3ph = runupf(jpc, jpc_3ph, gs_eg, bs_eg, opt)","category":"page"},{"location":"api/utils.html#注意事项","page":"Utils模块","title":"注意事项","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"在处理大型电网时，孤岛识别和提取功能可能需要较长时间，建议对大系统进行优化。\n虚拟节点合并可能会改变系统拓扑，请确保合并后的系统仍然符合预期。\n内部/外部编号转换在处理结果时非常重要，尤其是将结果与原始数据对比时。\n拓扑分析功能可用于检测系统中的潜在问题，如重复节点或断开的连接。","category":"page"},{"location":"api/utils.html#参考文献","page":"Utils模块","title":"参考文献","text":"","category":"section"},{"location":"api/utils.html","page":"Utils模块","title":"Utils模块","text":"Power System Analysis, J.J. Grainger and W.D. Stevenson Jr.\nGraph Theory with Applications to Engineering and Computer Science, N. Deo.\nMATPOWER: A MATLAB Power System Simulation Package, R.D. Zimmerman, C.E. Murillo-Sánchez, and R.J. Thomas.","category":"page"},{"location":"examples/time_series.html#TimeSeriesPowerFlow-模块示例","page":"时序潮流示例","title":"TimeSeriesPowerFlow 模块示例","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"本文档提供了 TimeSeriesPowerFlow 模块的详细使用示例，展示了时间序列潮流计算、动态调度、可再生能源集成以及结果可视化的应用方法。这些示例旨在帮助用户深入理解 TimeSeriesPowerFlow 模块的核心功能。","category":"page"},{"location":"examples/time_series.html#基础时间序列潮流计算","page":"时序潮流示例","title":"基础时间序列潮流计算","text":"","category":"section"},{"location":"examples/time_series.html#加载数据与基本计算","page":"时序潮流示例","title":"加载数据与基本计算","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"执行基本的时间序列潮流计算：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"using PowerFlow\nusing TimeSeriesPowerFlow\nusing Plots\n\n# 加载标准测试系统\ncase = load_case(\"case14.m\")\n\n# 准备24小时负荷数据\n# 这里假设load_data.xlsx包含了24小时的负荷曲线数据\nload_file = \"load_data.xlsx\"\n\n# 执行时间序列潮流计算\nresults = runtdpf(case, load_file)\n\n# 检查计算结果\nprintln(\"时间序列潮流计算结果:\")\nprintln(\"  时间点数量: $(length(results.time_points))\")\nprintln(\"  成功计算的时间点数量: $(sum(results.success))\")\n\n# 查看第一个时间点的结果\nif results.success[1]\n    first_result = results.bus_results[1]\n    println(\"第一个时间点:\")\n    println(\"  总负荷: $(sum(first_result.bus[:, PD])) MW\")\n    println(\"  总发电: $(sum(first_result.gen[:, PG])) MW\")\n    println(\"  总损耗: $(sum(first_result.branch[:, PL])) MW\")\nend","category":"page"},{"location":"examples/time_series.html#结果可视化","page":"时序潮流示例","title":"结果可视化","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"可视化时间序列潮流计算结果：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 提取时间序列数据\ntime_points = results.time_points\ntotal_load = zeros(length(time_points))\ntotal_gen = zeros(length(time_points))\ntotal_loss = zeros(length(time_points))\nmin_voltage = zeros(length(time_points))\n\nfor t in 1:length(time_points)\n    if results.success[t]\n        result = results.bus_results[t]\n        total_load[t] = sum(result.bus[:, PD])\n        total_gen[t] = sum(result.gen[:, PG])\n        total_loss[t] = sum(result.branch[:, PL])\n        min_voltage[t] = minimum(result.bus[:, VM])\n    else\n        # 对未收敛的时间点使用NaN\n        total_load[t] = NaN\n        total_gen[t] = NaN\n        total_loss[t] = NaN\n        min_voltage[t] = NaN\n    end\nend\n\n# 绘制负荷曲线\np1 = plot(time_points, total_load,\n    title=\"24小时负荷曲线\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"总负荷(MW)\",\n    marker=:circle,\n    label=\"总负荷\",\n    legend=:topleft)\n\n# 绘制发电曲线\np2 = plot(time_points, total_gen,\n    title=\"24小时发电曲线\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"总发电(MW)\",\n    marker=:circle,\n    label=\"总发电\",\n    legend=:topleft)\n\n# 绘制损耗曲线\np3 = plot(time_points, total_loss,\n    title=\"24小时系统损耗曲线\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"总损耗(MW)\",\n    marker=:circle,\n    label=\"总损耗\",\n    legend=:topleft)\n\n# 绘制最低电压曲线\np4 = plot(time_points, min_voltage,\n    title=\"24小时最低电压曲线\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"最低电压(pu)\",\n    marker=:circle,\n    label=\"最低电压\",\n    legend=:bottomleft)\n\n# 组合图表\nplot(p1, p2, p3, p4, layout=(2,2), size=(1000, 800))\nsavefig(\"time_series_results.png\")","category":"page"},{"location":"examples/time_series.html#使用内置可视化函数","page":"时序潮流示例","title":"使用内置可视化函数","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"使用模块提供的内置可视化函数：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 使用内置函数绘制电压时间序列\nplot_time_day = 1  # 分析第一天的数据\nplot_voltage_time_series(results, case, plot_time_day)\n\n# 绘制系统损耗时间序列\nplot_losses_time_series(results, case, plot_time_day)\n\n# 绘制特定母线的电压时间序列\nbus_id = 5  # 选择特定母线\nplot_bus_voltage_time_series(results, case, bus_id, plot_time_day)\n\n# 绘制特定支路的功率流时间序列\nbranch_idx = 3  # 选择特定支路\nplot_branch_flow_time_series(results, case, branch_idx, plot_time_day)","category":"page"},{"location":"examples/time_series.html#包含可再生能源的时间序列分析","page":"时序潮流示例","title":"包含可再生能源的时间序列分析","text":"","category":"section"},{"location":"examples/time_series.html#光伏发电集成","page":"时序潮流示例","title":"光伏发电集成","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"模拟包含光伏发电的时间序列潮流：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 准备光照强度数据\n# 假设irradiance_data.xlsx包含了24小时的光照强度数据\nirradiance_file = \"irradiance_data.xlsx\"\n\n# 执行包含光照数据的时间序列潮流计算\npv_results = runtdpf(case, load_file, irradiance_file)\n\n# 分析光伏发电输出\n# 假设系统中的PV发电机编号为[3, 5]\npv_gen_indices = [3, 5]\n\n# 提取光伏发电时间序列\npv_generation = zeros(length(pv_results.time_points), length(pv_gen_indices))\n\nfor t in 1:length(pv_results.time_points)\n    if pv_results.success[t]\n        for (i, gen_idx) in enumerate(pv_gen_indices)\n            pv_generation[t, i] = pv_results.bus_results[t].gen[gen_idx, PG]\n        end\n    end\nend\n\n# 绘制光伏发电曲线\nplot(pv_results.time_points, pv_generation,\n    title=\"光伏发电时间序列\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"发电功率(MW)\",\n    label=[\"PV发电机 $(pv_gen_indices[i])\" for i in 1:length(pv_gen_indices)],\n    marker=:circle,\n    legend=:topleft)\nsavefig(\"pv_generation.png\")\n\n# 分析光伏渗透率对系统的影响\ntotal_gen_with_pv = zeros(length(pv_results.time_points))\ntotal_loss_with_pv = zeros(length(pv_results.time_points))\n\nfor t in 1:length(pv_results.time_points)\n    if pv_results.success[t]\n        total_gen_with_pv[t] = sum(pv_results.bus_results[t].gen[:, PG])\n        total_loss_with_pv[t] = sum(pv_results.bus_results[t].branch[:, PL])\n    end\nend\n\n# 计算光伏发电占比\npv_penetration = sum(pv_generation, dims=2) ./ total_gen_with_pv * 100\n\n# 绘制光伏渗透率曲线\nplot(pv_results.time_points, pv_penetration,\n    title=\"光伏渗透率时间序列\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"光伏渗透率(%)\",\n    marker=:circle,\n    legend=false)\nsavefig(\"pv_penetration.png\")","category":"page"},{"location":"examples/time_series.html#最大功率点跟踪","page":"时序潮流示例","title":"最大功率点跟踪","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"模拟光伏发电的最大功率点跟踪：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 设置MPPT选项\nmppt_opt = Dict(\n    \"pv_mode\" => \"MPPT\",\n    \"verbose\" => 1\n)\n\n# 执行带有MPPT的时间序列潮流计算\nmppt_results = runtdpf(case, load_file, irradiance_file, nothing, mppt_opt)\n\n# 比较MPPT模式与默认模式的光伏发电\nmppt_generation = zeros(length(mppt_results.time_points), length(pv_gen_indices))\n\nfor t in 1:length(mppt_results.time_points)\n    if mppt_results.success[t]\n        for (i, gen_idx) in enumerate(pv_gen_indices)\n            mppt_generation[t, i] = mppt_results.bus_results[t].gen[gen_idx, PG]\n        end\n    end\nend\n\n# 绘制比较图\nfor i in 1:length(pv_gen_indices)\n    plot(pv_results.time_points, [pv_generation[:, i] mppt_generation[:, i]],\n        title=\"PV发电机 $(pv_gen_indices[i]) 发电比较\",\n        xlabel=\"时间(小时)\",\n        ylabel=\"发电功率(MW)\",\n        label=[\"默认模式\" \"MPPT模式\"],\n        marker=:circle,\n        legend=:topleft)\n    savefig(\"pv_mppt_comparison_$(pv_gen_indices[i]).png\")\nend","category":"page"},{"location":"examples/time_series.html#动态经济调度","page":"时序潮流示例","title":"动态经济调度","text":"","category":"section"},{"location":"examples/time_series.html#基本经济调度","page":"时序潮流示例","title":"基本经济调度","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"执行基本的动态经济调度：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 准备电价数据\n# 假设price_data.xlsx包含了24小时的电价数据\nprice_file = \"price_data.xlsx\"\n\n# 设置动态调度选项\ndispatch_opt = Dict(\n    \"mode\" => \"dynamic_dispatch\",\n    \"verbose\" => 1\n)\n\n# 执行动态经济调度计算\ndispatch_results = runtdpf(case, load_file, irradiance_file, price_file, dispatch_opt)\n\n# 分析调度结果\n# 提取各发电机的出力曲线\ngen_dispatch = zeros(length(dispatch_results.time_points), size(case.gen, 1))\nprices = zeros(length(dispatch_results.time_points))\n\nfor t in 1:length(dispatch_results.time_points)\n    if dispatch_results.success[t]\n        for g in 1:size(case.gen, 1)\n            gen_dispatch[t, g] = dispatch_results.bus_results[t].gen[g, PG]\n        end\n        prices[t] = dispatch_results.prices[t]\n    end\nend\n\n# 绘制发电机出力曲线\nplot(dispatch_results.time_points, gen_dispatch,\n    title=\"发电机经济调度结果\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"发电功率(MW)\",\n    label=[\"发电机 $g\" for g in 1:size(case.gen, 1)],\n    legend=:outerright)\nsavefig(\"economic_dispatch.png\")\n\n# 绘制电价曲线\nplot(dispatch_results.time_points, prices,\n    title=\"24小时电价曲线\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"电价($/MWh)\",\n    marker=:circle,\n    legend=false)\nsavefig(\"price_curve.png\")\n\n# 计算总发电成本\ntotal_cost = sum(prices .* sum(gen_dispatch, dims=2))\nprintln(\"总发电成本: $total_cost $\")","category":"page"},{"location":"examples/time_series.html#考虑网络约束的经济调度","page":"时序潮流示例","title":"考虑网络约束的经济调度","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"执行考虑网络约束的经济调度：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 设置考虑网络约束的动态调度选项\nnetwork_dispatch_opt = Dict(\n    \"mode\" => \"network_constrained_dispatch\",\n    \"enforce_branch_limits\" => 1,\n    \"verbose\" => 1\n)\n\n# 执行考虑网络约束的动态经济调度\nnetwork_results = runtdpf(case, load_file, irradiance_file, price_file, network_dispatch_opt)\n\n# 分析网络约束下的调度结果\nnetwork_gen_dispatch = zeros(length(network_results.time_points), size(case.gen, 1))\n\nfor t in 1:length(network_results.time_points)\n    if network_results.success[t]\n        for g in 1:size(case.gen, 1)\n            network_gen_dispatch[t, g] = network_results.bus_results[t].gen[g, PG]\n        end\n    end\nend\n\n# 比较有无网络约束的调度结果\nfor g in 1:size(case.gen, 1)\n    plot(dispatch_results.time_points, [gen_dispatch[:, g] network_gen_dispatch[:, g]],\n        title=\"发电机 $g 调度比较\",\n        xlabel=\"时间(小时)\",\n        ylabel=\"发电功率(MW)\",\n        label=[\"无网络约束\" \"有网络约束\"],\n        marker=:circle,\n        legend=:topleft)\n    savefig(\"dispatch_comparison_gen_$g.png\")\nend\n\n# 分析网络约束的影响\n# 检查是否有支路达到限制\nbranch_loading = zeros(length(network_results.time_points), size(case.branch, 1))\nbranch_limits = case.branch[:, RATE_A]\n\nfor t in 1:length(network_results.time_points)\n    if network_results.success[t]\n        for br in 1:size(case.branch, 1)\n            if branch_limits[br] > 0  # 只考虑有限制的支路\n                branch_loading[t, br] = abs(network_results.bus_results[t].branch[br, PF]) / branch_limits[br] * 100\n            end\n        end\n    end\nend\n\n# 找出负载率最高的支路\nmax_loading = maximum(branch_loading, dims=1)[:]\ncritical_branches = findall(max_loading .> 90)  # 负载率超过90%的支路\n\nif !isempty(critical_branches)\n    println(\"关键支路(最大负载率超过90%):\")\n    for br in critical_branches\n        println(\"  支路 $(case.branch[br, F_BUS])-$(case.branch[br, T_BUS]): $(max_loading[br])%\")\n    end\n    \n    # 绘制关键支路的负载率曲线\n    plot(network_results.time_points, branch_loading[:, critical_branches],\n        title=\"关键支路负载率\",\n        xlabel=\"时间(小时)\",\n        ylabel=\"负载率(%)\",\n        label=[\"支路 $(case.branch[br, F_BUS])-$(case.branch[br, T_BUS])\" for br in critical_branches],\n        legend=:outerright)\n    savefig(\"critical_branch_loading.png\")\nend","category":"page"},{"location":"examples/time_series.html#线性分布潮流","page":"时序潮流示例","title":"线性分布潮流","text":"","category":"section"},{"location":"examples/time_series.html#基本线性分布潮流计算","page":"时序潮流示例","title":"基本线性分布潮流计算","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"执行线性分布潮流计算：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 设置线性分布潮流选项\nlindist_opt = Dict(\n    \"pf_alg\" => \"LINDISTFLOW\",\n    \"verbose\" => 1\n)\n\n# 执行线性分布潮流计算\nlindist_results = runlindistflow(case, load_file)\n\n# 比较线性分布潮流与完整潮流计算的结果\n# 提取两种方法的电压结果\nvoltage_full = zeros(length(results.time_points), size(case.bus, 1))\nvoltage_lindist = zeros(length(lindist_results.time_points), size(case.bus, 1))\n\nfor t in 1:length(results.time_points)\n    if results.success[t] && lindist_results.success[t]\n        for b in 1:size(case.bus, 1)\n            voltage_full[t, b] = results.bus_results[t].bus[b, VM]\n            voltage_lindist[t, b] = lindist_results.bus_results[t].bus[b, VM]\n        end\n    end\nend\n\n# 计算电压误差\nvoltage_error = abs.(voltage_full - voltage_lindist)\nmax_error = maximum(voltage_error)\navg_error = mean(voltage_error)\n\nprintln(\"线性分布潮流与完整潮流计算的电压比较:\")\nprintln(\"  最大误差: $max_error pu\")\nprintln(\"  平均误差: $avg_error pu\")\n\n# 绘制特定母线的电压比较\nbus_to_plot = 5  # 选择一个母线进行比较\nplot(results.time_points, [voltage_full[:, bus_to_plot] voltage_lindist[:, bus_to_plot]],\n    title=\"母线 $(case.bus[bus_to_plot, BUS_I]) 电压比较\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"电压幅值(pu)\",\n    label=[\"完整潮流\" \"线性分布潮流\"],\n    marker=:circle,\n    legend=:bottomleft)\nsavefig(\"voltage_comparison_bus_$(case.bus[bus_to_plot, BUS_I]).png\")\n\n# 比较计算时间\nusing BenchmarkTools\n\nprintln(\"完整潮流计算性能:\")\n@btime runtdpf($case, $load_file);\n\nprintln(\"线性分布潮流计算性能:\")\n@btime runlindistflow($case, $load_file);","category":"page"},{"location":"examples/time_series.html#配电网应用","page":"时序潮流示例","title":"配电网应用","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"在配电网中应用线性分布潮流：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 加载配电网测试系统\ndist_case = load_case(\"case_distribution.m\")\n\n# 执行线性分布潮流计算\ndist_lindist_results = runlindistflow(dist_case, load_file)\n\n# 分析配电网中的电压分布\n# 提取末端节点的电压\n# 假设末端节点是编号最大的几个节点\nnum_end_nodes = 5\nnum_buses = size(dist_case.bus, 1)\nend_nodes = (num_buses-num_end_nodes+1):num_buses\n\n# 提取末端节点的电压时间序列\nend_voltage = zeros(length(dist_lindist_results.time_points), length(end_nodes))\n\nfor t in 1:length(dist_lindist_results.time_points)\n    if dist_lindist_results.success[t]\n        for (i, node) in enumerate(end_nodes)\n            end_voltage[t, i] = dist_lindist_results.bus_results[t].bus[node, VM]\n        end\n    end\nend\n\n# 绘制末端节点电压曲线\nplot(dist_lindist_results.time_points, end_voltage,\n    title=\"配电网末端节点电压\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"电压幅值(pu)\",\n    label=[\"节点 $(dist_case.bus[node, BUS_I])\" for node in end_nodes],\n    legend=:bottomleft)\nsavefig(\"distribution_end_voltage.png\")\n\n# 检查电压越限情况\nvoltage_violations = (end_voltage .< 0.95) .| (end_voltage .> 1.05)\nhas_violations = any(voltage_violations)\n\nif has_violations\n    println(\"检测到电压越限情况:\")\n    for (i, node) in enumerate(end_nodes)\n        node_violations = sum(voltage_violations[:, i])\n        if node_violations > 0\n            println(\"  节点 $(dist_case.bus[node, BUS_I]) 有 $node_violations 个时间点电压越限\")\n        end\n    end\nend","category":"page"},{"location":"examples/time_series.html#违例分析与可视化","page":"时序潮流示例","title":"违例分析与可视化","text":"","category":"section"},{"location":"examples/time_series.html#电压违例分析","page":"时序潮流示例","title":"电压违例分析","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"分析时间序列中的电压违例：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 设置电压限制\nv_min = 0.95\nv_max = 1.05\n\n# 分析电压违例\nvoltage_violations = analyze_voltage_violations(results, case, v_min, v_max)\n\n# 显示违例摘要\nprintln(\"电压违例摘要:\")\nprintln(\"  低电压违例数量: $(voltage_violations.low_count)\")\nprintln(\"  高电压违例数量: $(voltage_violations.high_count)\")\n\n# 如果有违例，显示详细信息\nif voltage_violations.low_count > 0 || voltage_violations.high_count > 0\n    println(\"违例详情:\")\n    \n    # 低电压违例\n    if voltage_violations.low_count > 0\n        println(\"  低电压违例:\")\n        for violation in voltage_violations.low_violations\n            println(\"    时间点 $(violation.time), 母线 $(violation.bus_id): $(violation.value) pu\")\n        end\n    end\n    \n    # 高电压违例\n    if voltage_violations.high_count > 0\n        println(\"  高电压违例:\")\n        for violation in voltage_violations.high_violations\n            println(\"    时间点 $(violation.time), 母线 $(violation.bus_id): $(violation.value) pu\")\n        end\n    end\n    \n    # 绘制违例图表\n    plot_voltage_violations(results, case, v_min, v_max)\nend","category":"page"},{"location":"examples/time_series.html#支路功率流违例分析","page":"时序潮流示例","title":"支路功率流违例分析","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"分析时间序列中的支路功率流违例：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 设置违例阈值(%)\nflow_threshold = 90\n\n# 分析支路功率流违例\nflow_violations = analyze_flow_violations(results, case, flow_threshold)\n\n# 显示违例摘要\nprintln(\"支路功率流违例摘要:\")\nprintln(\"  违例数量: $(flow_violations.count)\")\n\n# 如果有违例，显示详细信息\nif flow_violations.count > 0\n    println(\"违例详情:\")\n    for violation in flow_violations.violations\n        from_bus = case.branch[violation.branch_idx, F_BUS]\n        to_bus = case.branch[violation.branch_idx, T_BUS]\n        println(\"  时间点 $(violation.time), 支路 $from_bus-$to_bus: $(violation.value)% of rating\")\n    end\n    \n    # 绘制违例图表\n    plot_flow_violations(results, case, flow_threshold)\nend","category":"page"},{"location":"examples/time_series.html#时间序列动画","page":"时序潮流示例","title":"时间序列动画","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"创建时间序列结果的动画：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"using Plots\n\n# 创建电压分布动画\nanim = @animate for t in 1:length(results.time_points)\n    if results.success[t]\n        result = results.bus_results[t]\n        bar(result.bus[:, BUS_I], result.bus[:, VM],\n            title=\"电压分布 - 时间点 $(results.time_points[t])\",\n            xlabel=\"母线编号\",\n            ylabel=\"电压幅值(pu)\",\n            ylims=(0.9, 1.1),\n            legend=false)\n    end\nend\n\ngif(anim, \"voltage_animation.gif\", fps=2)\n\n# 创建系统负荷和损耗动画\nanim2 = @animate for t in 1:length(results.time_points)\n    if results.success[t]\n        result = results.bus_results[t]\n        total_load = sum(result.bus[:, PD])\n        total_loss = sum(result.branch[:, PL])\n        \n        bar([1, 2], [total_load, total_loss],\n            title=\"系统负荷和损耗 - 时间点 $(results.time_points[t])\",\n            xlabel=\"\",\n            ylabel=\"功率(MW)\",\n            xticks=(1:2, [\"总负荷\", \"总损耗\"]),\n            legend=false)\n    end\nend\n\ngif(anim2, \"load_loss_animation.gif\", fps=2)","category":"page"},{"location":"examples/time_series.html#高级应用","page":"时序潮流示例","title":"高级应用","text":"","category":"section"},{"location":"examples/time_series.html#储能系统集成","page":"时序潮流示例","title":"储能系统集成","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"模拟包含储能系统的时间序列潮流：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 加载包含储能系统的案例\nstorage_case = load_case(\"case_with_storage.m\")\n\n# 设置储能调度选项\nstorage_opt = Dict(\n    \"storage_control\" => \"optimal\",\n    \"verbose\" => 1\n)\n\n# 执行包含储能的时间序列潮流计算\nstorage_results = runtdpf(storage_case, load_file, irradiance_file, price_file, storage_opt)\n\n# 分析储能系统的充放电行为\n# 假设储能系统连接在特定母线上\nstorage_bus_id = 10\nstorage_p = zeros(length(storage_results.time_points))\nstorage_soc = zeros(length(storage_results.time_points))\n\nfor t in 1:length(storage_results.time_points)\n    if storage_results.success[t]\n        # 提取储能功率(正值表示放电，负值表示充电)\n        storage_p[t] = storage_results.storage_results[t][storage_bus_id, STORAGE_P]\n        # 提取储能SOC\n        storage_soc[t] = storage_results.storage_results[t][storage_bus_id, STORAGE_SOC]\n    end\nend\n\n# 绘制储能充放电曲线\np1 = plot(storage_results.time_points, storage_p,\n    title=\"储能充放电功率\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"功率(MW)\",\n    marker=:circle,\n    label=\"储能功率(正值为放电)\")\n\n# 绘制储能SOC曲线\np2 = plot(storage_results.time_points, storage_soc * 100,\n    title=\"储能SOC\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"SOC(%)\",\n    marker=:circle,\n    label=\"储能SOC\")\n\n# 组合图表\nplot(p1, p2, layout=(2,1), size=(800, 600))\nsavefig(\"storage_behavior.png\")\n\n# 分析储能对系统的影响\n# 比较有无储能的系统损耗\nstorage_loss = zeros(length(storage_results.time_points))\nfor t in 1:length(storage_results.time_points)\n    if storage_results.success[t]\n        storage_loss[t] = sum(storage_results.bus_results[t].branch[:, PL])\n    end\nend\n\n# 绘制损耗比较曲线\nplot(results.time_points, [total_loss storage_loss],\n    title=\"系统损耗比较\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"系统损耗(MW)\",\n    label=[\"无储能\" \"有储能\"],\n    marker=:circle,\n    legend=:topleft)\nsavefig(\"loss_comparison_with_storage.png\")","category":"page"},{"location":"examples/time_series.html#需求响应模拟","page":"时序潮流示例","title":"需求响应模拟","text":"","category":"section"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"模拟需求响应对系统的影响：","category":"page"},{"location":"examples/time_series.html","page":"时序潮流示例","title":"时序潮流示例","text":"# 设置需求响应选项\ndr_opt = Dict(\n    \"demand_response\" => true,\n    \"dr_price_threshold\" => 50,  # 当电价超过此值时触发需求响应\n    \"dr_reduction\" => 0.1,       # 需求响应减少10%的负荷\n    \"verbose\" => 1\n)\n\n# 执行包含需求响应的时间序列潮流计算\ndr_results = runtdpf(case, load_file, irradiance_file, price_file, dr_opt)\n\n# 分析需求响应的效果\ndr_load = zeros(length(dr_results.time_points))\nfor t in 1:length(dr_results.time_points)\n    if dr_results.success[t]\n        dr_load[t] = sum(dr_results.bus_results[t].bus[:, PD])\n    end\nend\n\n# 绘制需求响应效果\nplot(results.time_points, [total_load dr_load],\n    title=\"需求响应效果\",\n    xlabel=\"时间(小时)\",\n    ylabel=\"总负荷(MW)\",\n    label=[\"基准负荷\" \"需求响应后负荷\"],\n    marker=:circle,\n    legend=:topleft)\nsavefig(\"demand_response_effect.png\")\n\n# 计算需求响应的经济效益\nif !isempty(dr_results.prices)\n    base_cost = sum(total_load .* dr_results.prices)\n    dr_cost = sum(dr_load .* dr_results.prices)\n    savings = base_cost - dr_cost\n    \n    println(\"需求响应经济效益分析:\")\n    println(\"  基准情况总成本: $base_cost $\")\n    println(\"  需求响应后总成本: $dr_cost $\")\n    println(\"  节约成本: $savings $ ($(savings/base_cost*100)%)\")\nend","category":"page"},{"location":"api/time_series_power_flow.html#TimeSeriesPowerFlow-模块-API文档","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow 模块 API文档","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"TimeSeriesPowerFlow模块提供了电力系统时间序列潮流计算和分析的完整功能集，包括时间序列潮流计算、动态调度、结果可视化以及违例分析等功能。该模块特别适用于含有可再生能源和负荷变化的电力系统分析。","category":"page"},{"location":"api/time_series_power_flow.html#模块概述","page":"TimeSeriesPowerFlow模块","title":"模块概述","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"TimeSeriesPowerFlow模块实现了多种时间序列分析算法，包括线性分布潮流、最大功率点跟踪、动态调度等，并提供了丰富的结果可视化和分析工具。该模块可用于分析电力系统在一天或更长时间内的动态运行特性。","category":"page"},{"location":"api/time_series_power_flow.html#主要功能","page":"TimeSeriesPowerFlow模块","title":"主要功能","text":"","category":"section"},{"location":"api/time_series_power_flow.html#时间序列潮流计算","page":"TimeSeriesPowerFlow模块","title":"时间序列潮流计算","text":"","category":"section"},{"location":"api/time_series_power_flow.html#时间序列潮流计算主函数","page":"TimeSeriesPowerFlow模块","title":"时间序列潮流计算主函数","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"runtdpf(case, load_file, irradiance_file=nothing, price_file=nothing, opt=Dict())","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"执行时间序列潮流计算的主函数。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"case: 电力系统案例数据\nload_file: 负荷数据文件路径\nirradiance_file: 光照强度数据文件路径（可选）\nprice_file: 电价数据文件路径（可选）\nopt: 可选参数设置\n返回: 包含时间序列潮流计算结果的数据结构","category":"page"},{"location":"api/time_series_power_flow.html#单日运行函数","page":"TimeSeriesPowerFlow模块","title":"单日运行函数","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"run_single_day(old_jpc, opt, day_load_matrix, day_price_line, day_irradiance_line)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"执行单日时间序列潮流计算。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"old_jpc: 电力系统案例数据\nopt: 可选参数设置\nday_load_matrix: 日负荷数据矩阵\nday_price_line: 日电价数据\nday_irradiance_line: 日光照强度数据\n返回: 包含单日潮流计算结果的数据结构","category":"page"},{"location":"api/time_series_power_flow.html#优化调度函数","page":"TimeSeriesPowerFlow模块","title":"优化调度函数","text":"","category":"section"},{"location":"api/time_series_power_flow.html#线性分布潮流","page":"TimeSeriesPowerFlow模块","title":"线性分布潮流","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"runlindistflow(new_jpc, opt, Cld_ac, Cld_dc, loadAC_PD, loadAC_QD, loadDC_PD, genAC_PG, Cgen_ac, Cconv_ac, Cconv_dc, Pij_limit, Pij_limit_dc, solver)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"执行线性分布潮流计算。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"new_jpc: 电力系统案例数据\nopt: 可选参数设置\nCld_ac, Cld_dc: 交直流负荷关联矩阵\nloadAC_PD, loadAC_QD: 交流有功和无功负荷\nloadDC_PD: 直流有功负荷\ngenAC_PG: 交流发电机有功出力\nCgen_ac: 发电机关联矩阵\nCconv_ac, Cconv_dc: 换流器关联矩阵\nPij_limit, Pij_limit_dc: 交直流线路功率限制\nsolver: 优化求解器\n返回: 线性分布潮流计算结果","category":"page"},{"location":"api/time_series_power_flow.html#动态调度","page":"TimeSeriesPowerFlow模块","title":"动态调度","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"run_dynamic_dispatch(new_jpc, Cld_ac, Cld_dc, loadAC_PD, loadAC_QD, loadDC_PD, genAC_PG, Cgen_ac, Cconv_ac, Cconv_dc, Pij_limit, Pij_limit_dc, price, irradiance, opt)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"执行动态经济调度计算。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"new_jpc: 电力系统案例数据\nCld_ac, Cld_dc: 交直流负荷关联矩阵\nloadAC_PD, loadAC_QD: 交流有功和无功负荷\nloadDC_PD: 直流有功负荷\ngenAC_PG: 交流发电机有功出力\nCgen_ac: 发电机关联矩阵\nCconv_ac, Cconv_dc: 换流器关联矩阵\nPij_limit, Pij_limit_dc: 交直流线路功率限制\nprice: 电价数据\nirradiance: 光照强度数据\nopt: 可选参数设置\n返回: 动态调度计算结果","category":"page"},{"location":"api/time_series_power_flow.html#最大功率点跟踪","page":"TimeSeriesPowerFlow模块","title":"最大功率点跟踪","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"runmppt(new_jpc, opt, Cld_ac, Cld_dc, loadAC_PD, loadAC_QD, loadDC_PD, genAC_PG, Cgen_ac, Cconv_ac, Cconv_dc, Pij_limit, Pij_limit_dc, irradiance)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"执行光伏系统最大功率点跟踪计算。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"new_jpc: 电力系统案例数据\nopt: 可选参数设置\nCld_ac, Cld_dc: 交直流负荷关联矩阵\nloadAC_PD, loadAC_QD: 交流有功和无功负荷\nloadDC_PD: 直流有功负荷\ngenAC_PG: 交流发电机有功出力\nCgen_ac: 发电机关联矩阵\nCconv_ac, Cconv_dc: 换流器关联矩阵\nPij_limit, Pij_limit_dc: 交直流线路功率限制\nirradiance: 光照强度数据\n返回: 最大功率点跟踪计算结果","category":"page"},{"location":"api/time_series_power_flow.html#自动潮流优化","page":"TimeSeriesPowerFlow模块","title":"自动潮流优化","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"runautopf(jpc, opt, mode=\"lindistflow\")","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"执行自动潮流优化计算。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"jpc: 电力系统案例数据\nopt: 可选参数设置\nmode: 优化模式，默认为\"lindistflow\"\n返回: 自动潮流优化计算结果","category":"page"},{"location":"api/time_series_power_flow.html#结果可视化函数","page":"TimeSeriesPowerFlow模块","title":"结果可视化函数","text":"","category":"section"},{"location":"api/time_series_power_flow.html#功率流越限分析","page":"TimeSeriesPowerFlow模块","title":"功率流越限分析","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"plot_flow_violations(results, case, time_day, flow_limit=3.0, plot_type=\"summary\", flow_direction=\"max\", show_plot=true, save_path=nothing)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"计算并绘制系统潮流越限的时间序列图。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"results: 结果数据集\ncase: 系统案例\ntime_day: 天数\nflow_limit: 线路功率流上限(MW)，默认为3.0\nplot_type: 绘图类型，可选\"summary\"、\"worst\"或\"all\"\nflow_direction: 功率流方向，可选\"max\"、\"both\"、\"forward\"或\"reverse\"\nshow_plot: 是否显示图形，默认为true\nsave_path: 保存图形的路径，默认为nothing\n返回: 越限统计信息和图形对象","category":"page"},{"location":"api/time_series_power_flow.html#系统损耗分析","page":"TimeSeriesPowerFlow模块","title":"系统损耗分析","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"plot_losses_time_series(results, case, time_day, plot_type=\"total\", loss_type=\"active\", show_plot=true, save_path=nothing)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"计算并绘制系统损耗的时间序列图。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"results: 结果数据集\ncase: 系统案例\ntime_day: 天数\nplot_type: 绘图类型，可选\"total\"或\"branch\"\nloss_type: 损耗类型，可选\"active\"或\"reactive\"\nshow_plot: 是否显示图形，默认为true\nsave_path: 保存图形的路径，默认为nothing\n返回: 损耗统计信息和图形对象","category":"page"},{"location":"api/time_series_power_flow.html#有功负荷分析","page":"TimeSeriesPowerFlow模块","title":"有功负荷分析","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"plot_PD_time_series(results, case, time_day, show_plot=true, save_path=nothing)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"绘制有功负荷的时间序列图。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"results: 结果数据集\ncase: 系统案例\ntime_day: 天数\nshow_plot: 是否显示图形，默认为true\nsave_path: 保存图形的路径，默认为nothing\n返回: 图形对象","category":"page"},{"location":"api/time_series_power_flow.html#电压分析","page":"TimeSeriesPowerFlow模块","title":"电压分析","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"plot_voltage_time_series(results, case, time_day, plot_type=\"magnitude\", show_plot=true, save_path=nothing)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"绘制电压幅值和相角的时间序列图。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"results: 结果数据集\ncase: 系统案例\ntime_day: 天数\nplot_type: 绘图类型，可选\"magnitude\"或\"angle\"\nshow_plot: 是否显示图形，默认为true\nsave_path: 保存图形的路径，默认为nothing\n返回: 图形对象","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"record_voltage_violation(results, bus_name, case, time_day, bus_type=\"AC\")","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"记录并分析电压越限情况。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"results: 结果数据集\nbus_name: 母线名称\ncase: 系统案例\ntime_day: 天数\nbus_type: 母线类型，默认为\"AC\"\n返回: 电压越限统计信息和图形对象","category":"page"},{"location":"api/time_series_power_flow.html#系统处理函数","page":"TimeSeriesPowerFlow模块","title":"系统处理函数","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"renumber_hybrid_system(jpc)","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"重新编号混合交直流系统。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"jpc: 电力系统案例数据\n返回: 重新编号后的案例数据","category":"page"},{"location":"api/time_series_power_flow.html#数据结构","page":"TimeSeriesPowerFlow模块","title":"数据结构","text":"","category":"section"},{"location":"api/time_series_power_flow.html#TimeSeriesResults","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesResults","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"表示时间序列潮流计算结果的数据结构。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"struct TimeSeriesResults\n    time_points::Vector{Float64}      # 时间点\n    time_strings::Vector{String}      # 时间字符串\n    bus_results::Vector{Any}          # 母线结果\n    branch_results::Vector{Any}       # 支路结果\n    gen_results::Vector{Any}          # 发电机结果\n    converter_results::Vector{Any}    # 换流器结果\n    success::Vector{Bool}             # 计算成功标志\nend","category":"page"},{"location":"api/time_series_power_flow.html#OptimizationResults","page":"TimeSeriesPowerFlow模块","title":"OptimizationResults","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"表示优化计算结果的数据结构。","category":"page"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"struct OptimizationResults\n    objective::Float64                # 目标函数值\n    V_ac::Vector{Float64}             # 交流电压\n    V_dc::Vector{Float64}             # 直流电压\n    Pij_ac::Vector{Float64}           # 交流支路功率\n    Pij_dc::Vector{Float64}           # 直流支路功率\n    Pg_ac::Vector{Float64}            # 交流发电机功率\n    Pc_ac::Vector{Float64}            # 交流换流器功率\n    Pc_dc::Vector{Float64}            # 直流换流器功率\n    success::Bool                     # 计算成功标志\nend","category":"page"},{"location":"api/time_series_power_flow.html#使用示例","page":"TimeSeriesPowerFlow模块","title":"使用示例","text":"","category":"section"},{"location":"api/time_series_power_flow.html#基本时间序列潮流计算","page":"TimeSeriesPowerFlow模块","title":"基本时间序列潮流计算","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"using TimeSeriesPowerFlow\n\n# 加载案例数据\ncase = load_case(\"case14.m\")\n\n# 执行时间序列潮流计算\nresults = runtdpf(case, \"load_data.xlsx\")\n\n# 分析结果\nplot_voltage_time_series(results, case, 1)","category":"page"},{"location":"api/time_series_power_flow.html#带有光伏的时间序列潮流计算","page":"TimeSeriesPowerFlow模块","title":"带有光伏的时间序列潮流计算","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"using TimeSeriesPowerFlow\n\n# 加载案例数据\ncase = load_case(\"case_with_pv.m\")\n\n# 执行时间序列潮流计算，包含光照数据\nresults = runtdpf(case, \"load_data.xlsx\", \"irradiance_data.xlsx\")\n\n# 分析结果\nplot_flow_violations(results, case, 1, 3.0)\nplot_losses_time_series(results, case, 1)","category":"page"},{"location":"api/time_series_power_flow.html#动态经济调度","page":"TimeSeriesPowerFlow模块","title":"动态经济调度","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"using TimeSeriesPowerFlow\n\n# 加载案例数据\ncase = load_case(\"hybrid_case.m\")\n\n# 执行时间序列潮流计算，包含电价和光照数据\nopt = Dict(\"mode\" => \"dynamic_dispatch\")\nresults = runtdpf(case, \"load_data.xlsx\", \"irradiance_data.xlsx\", \"price_data.xlsx\", opt)\n\n# 分析结果\nplot_PD_time_series(results, case, 1)","category":"page"},{"location":"api/time_series_power_flow.html#电压越限分析","page":"TimeSeriesPowerFlow模块","title":"电压越限分析","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"using TimeSeriesPowerFlow\n\n# 加载案例数据\ncase = load_case(\"case14.m\")\n\n# 执行时间序列潮流计算\nresults = runtdpf(case, \"load_data.xlsx\")\n\n# 分析特定母线的电压越限情况\nviolation_info = record_voltage_violation(results, \"Bus 5\", case, 1)\nprintln(\"电压越限次数: \", violation_info.violation_count)","category":"page"},{"location":"api/time_series_power_flow.html#注意事项","page":"TimeSeriesPowerFlow模块","title":"注意事项","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"时间序列数据文件（负荷、光照、电价）应采用Excel格式，并按照特定格式组织。\n对于混合交直流系统，请确保使用renumber_hybrid_system函数进行正确的编号处理。\n线性分布潮流算法适用于辐射状网络，对于网状结构可能存在精度问题。\n动态调度和MPPT模式需要提供光照数据才能正确模拟光伏系统的行为。\n结果可视化函数支持中文显示，但需要系统安装相应的中文字体。","category":"page"},{"location":"api/time_series_power_flow.html#参考文献","page":"TimeSeriesPowerFlow模块","title":"参考文献","text":"","category":"section"},{"location":"api/time_series_power_flow.html","page":"TimeSeriesPowerFlow模块","title":"TimeSeriesPowerFlow模块","text":"\"Distribution System Analysis and the Future Smart Grid\", IEEE Transactions on Industry Applications.\n\"Linear Power Flow in Distribution Networks Considering Host Capability and Network Constraints\", IEEE Transactions on Smart Grid.\n\"Time-Series Analysis of Large-Scale PV Integration in Distribution Systems\", IEEE Transactions on Power Systems.","category":"page"},{"location":"api/component_model.html#ComponentModel-模块-API-参考文档","page":"ComponentModel模块","title":"ComponentModel 模块 API 参考文档","text":"","category":"section"},{"location":"api/component_model.html#安装指南","page":"ComponentModel模块","title":"安装指南","text":"","category":"section"},{"location":"api/component_model.html#系统要求","page":"ComponentModel模块","title":"系统要求","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"Julia 1.6 或更高版本\n支持的操作系统: Windows, macOS, Linux","category":"page"},{"location":"api/component_model.html#安装方法","page":"ComponentModel模块","title":"安装方法","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"通过Julia的包管理器安装:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"using Pkg\nPkg.add(\"ComponentModel\")","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"或者在Julia REPL的包管理模式中安装:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"] add ComponentModel","category":"page"},{"location":"api/component_model.html#导入模块","page":"ComponentModel模块","title":"导入模块","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"using ComponentModel","category":"page"},{"location":"api/component_model.html#基础组件","page":"ComponentModel模块","title":"基础组件","text":"","category":"section"},{"location":"api/component_model.html#Bus","page":"ComponentModel模块","title":"Bus","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Bus <: AbstractComponent\n    index::Int\n    name::String\n    vn_kv::Float64\n    type::String\n    area::String\n    zone::String\n    in_service::Bool\n    vm_pu::Float64\n    va_degree::Float64\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示电力系统中的交流母线节点。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 母线名称\nvn_kv: 额定电压(kV)\ntype: 母线类型(PQ, PV, REF)\narea: 所属区域\nzone: 所属分区\nin_service: 运行状态\nvm_pu: 电压幅值(标幺值)\nva_degree: 电压相角(度)","category":"page"},{"location":"api/component_model.html#BusDC","page":"ComponentModel模块","title":"BusDC","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct BusDC <: AbstractComponent\n    index::Int\n    name::String\n    vn_kv::Float64\n    type::String\n    area::String\n    zone::String\n    in_service::Bool\n    vm_pu::Float64\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示电力系统中的直流母线节点。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 母线名称\nvn_kv: 额定电压(kV)\ntype: 母线类型(P, DC_REF)\narea: 所属区域\nzone: 所属分区\nin_service: 运行状态\nvm_pu: 电压幅值(标幺值)","category":"page"},{"location":"api/component_model.html#Line","page":"ComponentModel模块","title":"Line","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Line <: AbstractComponent\n    index::Int\n    name::String\n    from_bus::Int\n    to_bus::Int\n    length_km::Float64\n    r_ohm_per_km::Float64\n    x_ohm_per_km::Float64\n    c_nf_per_km::Float64\n    r0_ohm_per_km::Float64\n    x0_ohm_per_km::Float64\n    c0_nf_per_km::Float64\n    g_us_per_km::Float64\n    max_i_ka::Float64\n    type::String\n    max_loading_percent::Float64\n    parallel::Int\n    df::Float64\n    in_service::Bool\n    mtbf_hours::Float64\n    mttr_hours::Float64\n    sw_hours::Float64\n    rp_hours::Float64\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示交流输电线路或配电线路。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 线路名称\nfrom_bus: 起始母线ID\nto_bus: 终止母线ID\nlength_km: 线路长度(km)\nr_ohm_per_km: 正序电阻(Ω/km)\nx_ohm_per_km: 正序电抗(Ω/km)\nc_nf_per_km: 正序电容(nF/km)\nr0_ohm_per_km: 零序电阻(Ω/km)\nx0_ohm_per_km: 零序电抗(Ω/km)\nc0_nf_per_km: 零序电容(nF/km)\ng_us_per_km: 电导(μS/km)\nmax_i_ka: 最大电流容量(kA)\ntype: 线路类型(cs-电缆, ol-架空线)\nmax_loading_percent: 最大负载百分比\nparallel: 并联线路数量\ndf: 分布因子\nin_service: 运行状态\nmtbf_hours: 平均故障间隔时间(小时)\nmttr_hours: 平均修复时间(小时)\nsw_hours: 开关操作时间(小时)\nrp_hours: 修复准备时间(小时)","category":"page"},{"location":"api/component_model.html#LineDC","page":"ComponentModel模块","title":"LineDC","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct LineDC <: AbstractComponent\n    index::Int\n    name::String\n    from_bus::Int\n    to_bus::Int\n    length_km::Float64\n    r_ohm_per_km::Float64\n    max_i_ka::Float64\n    max_loading_percent::Float64\n    parallel::Int\n    in_service::Bool\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示直流输电线路或配电线路。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 线路名称\nfrom_bus: 起始母线ID\nto_bus: 终止母线ID\nlength_km: 线路长度(km)\nr_ohm_per_km: 电阻(Ω/km)\nmax_i_ka: 最大电流容量(kA)\nmax_loading_percent: 最大负载百分比\nparallel: 并联线路数量\nin_service: 运行状态","category":"page"},{"location":"api/component_model.html#发电组件","page":"ComponentModel模块","title":"发电组件","text":"","category":"section"},{"location":"api/component_model.html#StaticGenerator","page":"ComponentModel模块","title":"StaticGenerator","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct StaticGenerator <: AbstractComponent\n    index::Int\n    name::String\n    bus::Int\n    p_mw::Float64\n    q_mvar::Float64\n    scaling::Float64\n    max_p_mw::Float64\n    min_p_mw::Float64\n    max_q_mvar::Float64\n    min_q_mvar::Float64\n    k::Float64\n    rx::Float64\n    in_service::Bool\n    type::String\n    controllable::Bool\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示静态发电机，如风电、光伏等。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 发电机名称\nbus: 连接母线ID\np_mw: 有功功率输出(MW)\nq_mvar: 无功功率输出(MVar)\nscaling: 功率缩放因子\nmax_p_mw: 最大有功功率(MW)\nmin_p_mw: 最小有功功率(MW)\nmax_q_mvar: 最大无功功率(MVar)\nmin_q_mvar: 最小无功功率(MVar)\nk: 无功功率系数\nrx: 电抗/电阻比\nin_service: 运行状态\ntype: 发电机类型(WP-风电, PV-光伏, CHP-热电联产等)\ncontrollable: 是否可控","category":"page"},{"location":"api/component_model.html#Generator","page":"ComponentModel模块","title":"Generator","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Generator <: AbstractComponent\n    index::Int\n    name::String\n    bus::Int\n    p_mw::Float64\n    vm_pu::Float64\n    sn_mva::Float64\n    scaling::Float64\n    max_p_mw::Float64\n    min_p_mw::Float64\n    max_q_mvar::Float64\n    min_q_mvar::Float64\n    vn_kv::Float64\n    xdss_pu::Float64\n    rdss_pu::Float64\n    cos_phi::Float64\n    controllable::Bool\n    in_service::Bool\n    type::String\n    generator_type::String\n    fuel_type::String\n    startup_time_cold_h::Float64\n    startup_time_warm_h::Float64\n    startup_time_hot_h::Float64\n    min_up_time_h::Float64\n    min_down_time_h::Float64\n    ramp_up_rate_mw_per_min::Float64\n    ramp_down_rate_mw_per_min::Float64\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示常规发电机组。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 发电机名称\nbus: 连接母线ID\np_mw: 有功功率输出(MW)\nvm_pu: 电压控制设定值(标幺值)\nsn_mva: 额定视在功率(MVA)\nscaling: 功率缩放因子\nmax_p_mw: 最大有功功率(MW)\nmin_p_mw: 最小有功功率(MW)\nmax_q_mvar: 最大无功功率(MVar)\nmin_q_mvar: 最小无功功率(MVar)\nvn_kv: 额定电压(kV)\nxdss_pu: 次暂态电抗(标幺值)\nrdss_pu: 次暂态电阻(标幺值)\ncos_phi: 功率因数\ncontrollable: 是否可控\nin_service: 运行状态\ntype: 发电机类型\ngenerator_type: 发电机技术类型\nfuel_type: 燃料类型\nstartup_time_cold_h: 冷启动时间(小时)\nstartup_time_warm_h: 温启动时间(小时)\nstartup_time_hot_h: 热启动时间(小时)\nmin_up_time_h: 最小开机时间(小时)\nmin_down_time_h: 最小关机时间(小时)\nramp_up_rate_mw_per_min: 爬坡上升速率(MW/分钟)\nramp_down_rate_mw_per_min: 爬坡下降速率(MW/分钟)","category":"page"},{"location":"api/component_model.html#StaticGeneratorDC","page":"ComponentModel模块","title":"StaticGeneratorDC","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct StaticGeneratorDC <: AbstractComponent\n    index::Int\n    name::String\n    bus::Int\n    p_mw::Float64\n    scaling::Float64\n    max_p_mw::Float64\n    min_p_mw::Float64\n    in_service::Bool\n    type::String\n    controllable::Bool\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示直流系统中的静态发电机。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 发电机名称\nbus: 连接母线ID\np_mw: 功率输出(MW)\nscaling: 功率缩放因子\nmax_p_mw: 最大功率(MW)\nmin_p_mw: 最小功率(MW)\nin_service: 运行状态\ntype: 发电机类型\ncontrollable: 是否可控","category":"page"},{"location":"api/component_model.html#负荷组件","page":"ComponentModel模块","title":"负荷组件","text":"","category":"section"},{"location":"api/component_model.html#Load","page":"ComponentModel模块","title":"Load","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Load <: AbstractComponent\n    index::Int\n    name::String\n    bus::Int\n    p_mw::Float64\n    q_mvar::Float64\n    const_z_percent::Float64\n    const_i_percent::Float64\n    const_p_percent::Float64\n    scaling::Float64\n    in_service::Bool\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示交流系统中的对称负荷。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 负荷名称\nbus: 连接母线ID\np_mw: 有功功率(MW)\nq_mvar: 无功功率(MVar)\nconst_z_percent: 恒阻抗负荷百分比\nconst_i_percent: 恒电流负荷百分比\nconst_p_percent: 恒功率负荷百分比\nscaling: 负荷缩放因子\nin_service: 运行状态","category":"page"},{"location":"api/component_model.html#LoadDC","page":"ComponentModel模块","title":"LoadDC","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct LoadDC <: AbstractComponent\n    index::Int\n    name::String\n    bus::Int\n    p_mw::Float64\n    const_z_percent::Float64\n    const_i_percent::Float64\n    const_p_percent::Float64\n    scaling::Float64\n    in_service::Bool\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示直流系统中的负荷。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 负荷名称\nbus: 连接母线ID\np_mw: 功率(MW)\nconst_z_percent: 恒阻抗负荷百分比\nconst_i_percent: 恒电流负荷百分比\nconst_p_percent: 恒功率负荷百分比\nscaling: 负荷缩放因子\nin_service: 运行状态","category":"page"},{"location":"api/component_model.html#储能组件","page":"ComponentModel模块","title":"储能组件","text":"","category":"section"},{"location":"api/component_model.html#Storage","page":"ComponentModel模块","title":"Storage","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Storage <: AbstractComponent\n    index::Int\n    name::String\n    bus::Int\n    power_capacity_mw::Float64\n    energy_capacity_mwh::Float64\n    soc_init::Float64\n    min_soc::Float64\n    max_soc::Float64\n    efficiency::Float64\n    in_service::Bool\n    type::String\n    controllable::Bool\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示储能系统。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 储能系统名称\nbus: 连接母线ID\npower_capacity_mw: 功率容量(MW)\nenergy_capacity_mwh: 能量容量(MWh)\nsoc_init: 初始荷电状态\nmin_soc: 最小荷电状态\nmax_soc: 最大荷电状态\nefficiency: 充放电效率\nin_service: 运行状态\ntype: 储能类型\ncontrollable: 是否可控","category":"page"},{"location":"api/component_model.html#转换器组件","page":"ComponentModel模块","title":"转换器组件","text":"","category":"section"},{"location":"api/component_model.html#Converter","page":"ComponentModel模块","title":"Converter","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Converter <: AbstractComponent\n    index::Int\n    name::String\n    bus_ac::Int\n    bus_dc::Int\n    p_mw::Float64\n    q_mvar::Float64\n    vm_ac_pu::Float64\n    vm_dc_pu::Float64\n    loss_percent::Float64\n    max_p_mw::Float64\n    min_p_mw::Float64\n    max_q_mvar::Float64\n    min_q_mvar::Float64\n    in_service::Bool\n    type::String\n    mode::String\n    droop_kp::Float64\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示AC/DC转换器。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 转换器名称\nbus_ac: 交流侧母线ID\nbus_dc: 直流侧母线ID\np_mw: 有功功率(MW)\nq_mvar: 无功功率(MVar)\nvm_ac_pu: 交流侧电压(标幺值)\nvm_dc_pu: 直流侧电压(标幺值)\nloss_percent: 损耗百分比\nmax_p_mw: 最大有功功率(MW)\nmin_p_mw: 最小有功功率(MW)\nmax_q_mvar: 最大无功功率(MVar)\nmin_q_mvar: 最小无功功率(MVar)\nin_service: 运行状态\ntype: 转换器类型\nmode: 控制模式\ndroop_kp: 下垂控制系数","category":"page"},{"location":"api/component_model.html#电动汽车组件","page":"ComponentModel模块","title":"电动汽车组件","text":"","category":"section"},{"location":"api/component_model.html#ChargingStation","page":"ComponentModel模块","title":"ChargingStation","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct ChargingStation <: AbstractComponent\n    index::Int\n    name::String\n    bus::Int\n    location::String\n    operator::String\n    num_chargers::Int\n    max_power_kw::Float64\n    in_service::Bool\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示电动汽车充电站。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 充电站名称\nbus: 连接母线ID\nlocation: 地理位置\noperator: 运营商\nnum_chargers: 充电桩数量\nmax_power_kw: 最大功率(kW)\nin_service: 运行状态","category":"page"},{"location":"api/component_model.html#Charger","page":"ComponentModel模块","title":"Charger","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Charger <: AbstractComponent\n    index::Int\n    name::String\n    station_id::Int\n    type::String\n    power_kw::Float64\n    voltage_v::Float64\n    current_a::Float64\n    efficiency::Float64\n    in_service::Bool\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示充电桩。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 充电桩名称\nstation_id: 所属充电站ID\ntype: 充电桩类型\npower_kw: 功率(kW)\nvoltage_v: 电压(V)\ncurrent_a: 电流(A)\nefficiency: 效率\nin_service: 运行状态","category":"page"},{"location":"api/component_model.html#微电网组件","page":"ComponentModel模块","title":"微电网组件","text":"","category":"section"},{"location":"api/component_model.html#Microgrid","page":"ComponentModel模块","title":"Microgrid","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct Microgrid <: AbstractComponent\n    index::Int\n    name::String\n    description::String\n    control_area::String\n    capacity_mw::Float64\n    energy_mwh::Float64\n    response_time_s::Float64\n    ramp_rate_mw_per_min::Float64\n    availability_percent::Float64\n    operator::String\n    in_service::Bool\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示微电网系统。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 微电网名称\ndescription: 描述\ncontrol_area: 控制区域\ncapacity_mw: 容量(MW)\nenergy_mwh: 能量(MWh)\nresponse_time_s: 响应时间(秒)\nramp_rate_mw_per_min: 爬坡速率(MW/分钟)\navailability_percent: 可用性百分比\noperator: 运营商\nin_service: 运行状态","category":"page"},{"location":"api/component_model.html#虚拟电厂组件","page":"ComponentModel模块","title":"虚拟电厂组件","text":"","category":"section"},{"location":"api/component_model.html#VirtualPowerPlant","page":"ComponentModel模块","title":"VirtualPowerPlant","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct VirtualPowerPlant <: AbstractComponent\n    index::Int\n    name::String\n    description::String\n    control_area::String\n    capacity_mw::Float64\n    energy_mwh::Float64\n    response_time_s::Float64\n    ramp_rate_mw_per_min::Float64\n    availability_percent::Float64\n    operator::String\n    in_service::Bool\n    resource_type::String\n    resource_id::Int\n    capacity_share_percent::Float64\n    control_priority::Int\n    resource_response_time_s::Float64\n    max_duration_h::Float64\n    timestamp::DateTime\n    p_mw::Float64\n    q_mvar::Float64\n    flexibility_up_mw::Float64\n    flexibility_down_mw::Float64\n    flexibility_duration_h::Float64\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示虚拟电厂。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nname: 虚拟电厂名称\ndescription: 描述\ncontrol_area: 控制区域\ncapacity_mw: 容量(MW)\nenergy_mwh: 能量(MWh)\nresponse_time_s: 响应时间(秒)\nramp_rate_mw_per_min: 爬坡速率(MW/分钟)\navailability_percent: 可用性百分比\noperator: 运营商\nin_service: 运行状态\nresource_type: 资源类型\nresource_id: 资源ID\ncapacity_share_percent: 容量分担百分比\ncontrol_priority: 控制优先级\nresource_response_time_s: 资源响应时间(秒)\nmax_duration_h: 最大持续时间(小时)\ntimestamp: 时间戳\np_mw: 有功功率(MW)\nq_mvar: 无功功率(MVar)\nflexibility_up_mw: 上调灵活性(MW)\nflexibility_down_mw: 下调灵活性(MW)\nflexibility_duration_h: 灵活性持续时间(小时)","category":"page"},{"location":"api/component_model.html#碳排放组件","page":"ComponentModel模块","title":"碳排放组件","text":"","category":"section"},{"location":"api/component_model.html#CarbonTimeSeries","page":"ComponentModel模块","title":"CarbonTimeSeries","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct CarbonTimeSeries <: AbstractComponent\n    index::Int\n    timestamp::DateTime\n    grid_carbon_intensity_kgCO2e_per_MWh::Float64\n    renewable_generation_carbon_intensity_kgCO2e_per_MWh::Float64\n    storage_carbon_intensity_kgCO2e_per_MWh::Float64\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示碳排放时间序列。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\ntimestamp: 时间戳\ngrid_carbon_intensity_kgCO2e_per_MWh: 电网碳强度(kgCO2e/MWh)\nrenewable_generation_carbon_intensity_kgCO2e_per_MWh: 可再生能源碳强度(kgCO2e/MWh)\nstorage_carbon_intensity_kgCO2e_per_MWh: 储能碳强度(kgCO2e/MWh)","category":"page"},{"location":"api/component_model.html#EquipmentCarbon","page":"ComponentModel模块","title":"EquipmentCarbon","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"mutable struct EquipmentCarbon <: AbstractComponent\n    index::Int\n    element_type::String\n    element_id::Int\n    carbon_intensity_kgCO2e_per_MWh::Float64\n    lifecycle_emissions_kgCO2e::Float64\n    operational_emissions_kgCO2e_per_year::Float64\n    # 其他属性...\nend","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"表示设备碳排放。","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"属性:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"index: 唯一标识符\nelement_type: 设备类型\nelement_id: 设备ID\ncarbon_intensity_kgCO2e_per_MWh: 碳强度(kgCO2e/MWh)\nlifecycle_emissions_kgCO2e: 生命周期排放(kgCO2e)\noperational_emissions_kgCO2e_per_year: 运行排放(kgCO2e/年)","category":"page"},{"location":"api/component_model.html#使用示例","page":"ComponentModel模块","title":"使用示例","text":"","category":"section"},{"location":"api/component_model.html#创建电力系统模型","page":"ComponentModel模块","title":"创建电力系统模型","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"using ComponentModel\n\n# 创建母线\nbus1 = Bus(1, \"Bus 1\", 110.0, \"PQ\", \"Area1\", \"Zone1\", true, 1.0, 0.0)\nbus2 = Bus(2, \"Bus 2\", 110.0, \"PV\", \"Area1\", \"Zone1\", true, 1.02, 0.0)\nbus3 = Bus(3, \"Bus 3\", 110.0, \"REF\", \"Area1\", \"Zone1\", true, 1.05, 0.0)\n\n# 创建线路\nline1 = Line(1, \"Line 1-2\", 1, 2, 10.0, 0.1, 0.4, 10.0, 0.3, 1.2, 8.0, 0.0, 0.5, \"ol\", 80.0, 1, 1.0, true, 8760.0, 4.0, 1.0, 2.0)\nline2 = Line(2, \"Line 2-3\", 2, 3, 15.0, 0.1, 0.4, 10.0, 0.3, 1.2, 8.0, 0.0, 0.5, \"ol\", 80.0, 1, 1.0, true, 8760.0, 4.0, 1.0, 2.0)\n\n# 创建发电机\ngen1 = Generator(1, \"Generator 1\", 3, 100.0, 1.05, 120.0, 1.0, 150.0, 50.0, 100.0, -100.0, 110.0, 0.2, 0.01, 0.85, true, true, \"Thermal\", \"Steam\", \"Coal\", 4.0, 2.0, 1.0, 4.0, 2.0, 5.0, 5.0)\n\n# 创建负荷\nload1 = Load(1, \"Load 1\", 1, 80.0, 30.0, 30.0, 30.0, 40.0, 1.0, true)","category":"page"},{"location":"api/component_model.html#分析和计算","page":"ComponentModel模块","title":"分析和计算","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"# 假设有一个计算潮流的函数\nfunction run_power_flow(buses, lines, generators, loads)\n    # 潮流计算实现\n    # ...\n    return results\nend\n\n# 使用组件进行潮流计算\nresults = run_power_flow([bus1, bus2, bus3], [line1, line2], [gen1], [load1])","category":"page"},{"location":"api/component_model.html#数据导入导出","page":"ComponentModel模块","title":"数据导入导出","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"# 从CSV文件导入母线数据\nfunction import_buses_from_csv(filename)\n    buses = Bus[]\n    # 读取CSV文件并创建Bus对象\n    # ...\n    return buses\nend\n\n# 导出结果到CSV文件\nfunction export_results_to_csv(results, filename)\n    # 将结果写入CSV文件\n    # ...\nend\n\n# 使用示例\nbuses = import_buses_from_csv(\"buses.csv\")\nexport_results_to_csv(results, \"results.csv\")","category":"page"},{"location":"api/component_model.html#依赖项","page":"ComponentModel模块","title":"依赖项","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"Dates: 用于处理时间戳\nDataFrames: 用于数据处理和分析\nCSV: 用于文件导入导出\nPlots: 用于结果可视化","category":"page"},{"location":"api/component_model.html#版本历史","page":"ComponentModel模块","title":"版本历史","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"v0.1.0: 初始版本，基本组件定义\nv0.2.0: 添加直流系统组件\nv0.3.0: 添加微电网和虚拟电厂组件\nv0.4.0: 添加碳排放相关组件\nv0.5.0: 性能优化和bug修复","category":"page"},{"location":"api/component_model.html#贡献指南","page":"ComponentModel模块","title":"贡献指南","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"欢迎通过以下方式为ComponentModel做出贡献:","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"提交问题报告和功能请求\n提交代码修复和新功能\n改进文档和示例","category":"page"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"请确保所有提交都包含适当的测试和文档。","category":"page"},{"location":"api/component_model.html#许可证","page":"ComponentModel模块","title":"许可证","text":"","category":"section"},{"location":"api/component_model.html","page":"ComponentModel模块","title":"ComponentModel模块","text":"ComponentModel使用MIT许可证。详情请参见LICENSE文件。","category":"page"},{"location":"examples/power_flow.html#PowerFlow-模块示例","page":"潮流计算示例","title":"PowerFlow 模块示例","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"本文档提供了 PowerFlow 模块的详细使用示例，展示了各种潮流计算算法的应用、高级选项配置以及结果分析方法。这些示例旨在帮助用户深入理解 PowerFlow 模块的核心功能。","category":"page"},{"location":"examples/power_flow.html#基础潮流计算","page":"潮流计算示例","title":"基础潮流计算","text":"","category":"section"},{"location":"examples/power_flow.html#牛顿-拉夫森法潮流计算","page":"潮流计算示例","title":"牛顿-拉夫森法潮流计算","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"牛顿-拉夫森法是最常用的潮流计算方法，适用于大多数电力系统：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"using PowerFlow\n\n# 加载标准测试系统\ncase = load_case(\"case14.m\")\n\n# 使用牛顿-拉夫森法计算潮流\nopt = Dict(\"pf_alg\" => \"NR\", \"verbose\" => 1)\nresults = runpf(case, opt)\n\n# 显示收敛过程\nprintln(\"迭代次数: $(results.iterations)\")\nprintln(\"最终误差: $(results.max_mismatch)\")\n\n# 查看计算结果\nprintln(\"系统总发电: $(sum(results.gen[:, PG])) MW\")\nprintln(\"系统总负荷: $(sum(results.bus[:, PD])) MW\")\nprintln(\"系统总损耗: $(sum(results.branch[:, PL])) MW\")","category":"page"},{"location":"examples/power_flow.html#快速解耦潮流计算","page":"潮流计算示例","title":"快速解耦潮流计算","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"快速解耦法在某些情况下可以提供更快的计算速度：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 使用快速解耦法计算潮流\nopt = Dict(\"pf_alg\" => \"FDXB\", \"verbose\" => 1)\nfdxb_results = runpf(case, opt)\n\n# 比较与牛顿-拉夫森法的结果\nprintln(\"牛顿-拉夫森法迭代次数: $(results.iterations)\")\nprintln(\"快速解耦法迭代次数: $(fdxb_results.iterations)\")\n\n# 比较计算精度\nnr_losses = sum(results.branch[:, PL])\nfdxb_losses = sum(fdxb_results.branch[:, PL])\nprintln(\"牛顿-拉夫森法计算的系统损耗: $nr_losses MW\")\nprintln(\"快速解耦法计算的系统损耗: $fdxb_losses MW\")\nprintln(\"相对误差: $(abs(nr_losses - fdxb_losses) / nr_losses * 100)%\")","category":"page"},{"location":"examples/power_flow.html#高斯-赛德尔法潮流计算","page":"潮流计算示例","title":"高斯-赛德尔法潮流计算","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"高斯-赛德尔法适用于某些特定类型的系统：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 使用高斯-赛德尔法计算潮流\nopt = Dict(\"pf_alg\" => \"GS\", \"verbose\" => 1, \"max_it\" => 100)\ngs_results = runpf(case, opt)\n\n# 比较计算结果\nprintln(\"高斯-赛德尔法迭代次数: $(gs_results.iterations)\")\nprintln(\"高斯-赛德尔法计算的系统损耗: $(sum(gs_results.branch[:, PL])) MW\")","category":"page"},{"location":"examples/power_flow.html#直流潮流计算","page":"潮流计算示例","title":"直流潮流计算","text":"","category":"section"},{"location":"examples/power_flow.html#基本直流潮流","page":"潮流计算示例","title":"基本直流潮流","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"直流潮流提供了快速的近似解：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 执行直流潮流计算\ndc_results = rundcpf(case)\n\n# 查看计算结果\nprintln(\"直流潮流计算的系统总发电: $(sum(dc_results.gen[:, PG])) MW\")\nprintln(\"直流潮流计算的系统总负荷: $(sum(dc_results.bus[:, PD])) MW\")\n\n# 比较交流和直流潮流的计算速度\nusing BenchmarkTools\n\nprintln(\"交流潮流计算性能:\")\n@btime runpf($case);\n\nprintln(\"直流潮流计算性能:\")\n@btime rundcpf($case);","category":"page"},{"location":"examples/power_flow.html#直流潮流的线性敏感度分析","page":"潮流计算示例","title":"直流潮流的线性敏感度分析","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"直流潮流可用于快速进行线性敏感度分析：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 计算功率传输分布因子(PTDF)\nptdf_matrix = calc_ptdf(case)\n\n# 查看特定线路对特定注入的敏感度\nline_idx = 5\nbus_idx = 3\nprintln(\"线路 $(case.branch[line_idx, F_BUS])-$(case.branch[line_idx, T_BUS]) 对母线 $bus_idx 注入的敏感度: $(ptdf_matrix[line_idx, bus_idx])\")\n\n# 计算线路中断因子(LODF)\nlodf_matrix = calc_lodf(case)\n\n# 查看特定线路中断对其他线路的影响\noutage_line = 1\naffected_line = 5\nprintln(\"线路 $(case.branch[outage_line, F_BUS])-$(case.branch[outage_line, T_BUS]) 中断对线路 $(case.branch[affected_line, F_BUS])-$(case.branch[affected_line, T_BUS]) 的影响系数: $(lodf_matrix[affected_line, outage_line])\")","category":"page"},{"location":"examples/power_flow.html#不平衡潮流计算","page":"潮流计算示例","title":"不平衡潮流计算","text":"","category":"section"},{"location":"examples/power_flow.html#三相不平衡潮流","page":"潮流计算示例","title":"三相不平衡潮流","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"处理三相不平衡系统：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 加载三相不平衡系统案例\nunbalanced_case = load_case(\"case_unbalanced.m\")\n\n# 执行不平衡潮流计算\nopt = Dict(\"verbose\" => 1)\nupf_results = runupf(unbalanced_case, opt)\n\n# 查看各相电压\nfor i in 1:size(upf_results.bus, 1)\n    bus_id = upf_results.bus[i, BUS_I]\n    println(\"母线 $bus_id:\")\n    println(\"  A相电压: $(upf_results.bus[i, VM_A]) ∠ $(upf_results.bus[i, VA_A])°\")\n    println(\"  B相电压: $(upf_results.bus[i, VM_B]) ∠ $(upf_results.bus[i, VA_B])°\")\n    println(\"  C相电压: $(upf_results.bus[i, VM_C]) ∠ $(upf_results.bus[i, VA_C])°\")\nend\n\n# 计算电压不平衡度\nfor i in 1:size(upf_results.bus, 1)\n    vm_a = upf_results.bus[i, VM_A]\n    vm_b = upf_results.bus[i, VM_B]\n    vm_c = upf_results.bus[i, VM_C]\n    \n    vm_avg = (vm_a + vm_b + vm_c) / 3\n    vm_dev = max(abs(vm_a - vm_avg), abs(vm_b - vm_avg), abs(vm_c - vm_avg))\n    vuf = vm_dev / vm_avg * 100  # 电压不平衡度(%)\n    \n    println(\"母线 $(upf_results.bus[i, BUS_I]) 电压不平衡度: $vuf%\")\nend","category":"page"},{"location":"examples/power_flow.html#高级选项与自定义","page":"潮流计算示例","title":"高级选项与自定义","text":"","category":"section"},{"location":"examples/power_flow.html#自定义收敛标准","page":"潮流计算示例","title":"自定义收敛标准","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"设置自定义的收敛标准：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 设置严格的收敛标准\nstrict_opt = Dict(\n    \"pf_tol\" => 1e-8,        # 更严格的收敛容差\n    \"max_it\" => 50,          # 增加最大迭代次数\n    \"verbose\" => 2           # 更详细的输出\n)\n\n# 执行潮流计算\nstrict_results = runpf(case, strict_opt)\n\nprintln(\"使用严格收敛标准:\")\nprintln(\"  迭代次数: $(strict_results.iterations)\")\nprintln(\"  最终误差: $(strict_results.max_mismatch)\")","category":"page"},{"location":"examples/power_flow.html#自定义起始点","page":"潮流计算示例","title":"自定义起始点","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"设置自定义的计算起始点：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 保存原始案例数据\noriginal_case = deepcopy(case)\n\n# 修改起始电压值\nfor i in 1:size(case.bus, 1)\n    # 设置平坦起始点\n    case.bus[i, VM] = 1.0\n    case.bus[i, VA] = 0.0\nend\n\n# 使用平坦起始点计算潮流\nflat_results = runpf(case)\n\n# 使用\"热启动\"起始点\nwarm_start_case = deepcopy(original_case)\n# 将上一次的结果作为起始点\nfor i in 1:size(warm_start_case.bus, 1)\n    bus_idx = findfirst(x -> x == warm_start_case.bus[i, BUS_I], flat_results.bus[:, BUS_I])\n    if bus_idx !== nothing\n        warm_start_case.bus[i, VM] = flat_results.bus[bus_idx, VM]\n        warm_start_case.bus[i, VA] = flat_results.bus[bus_idx, VA]\n    end\nend\n\n# 使用热启动点计算潮流\nwarm_results = runpf(warm_start_case)\n\n# 比较迭代次数\nprintln(\"平坦起始点迭代次数: $(flat_results.iterations)\")\nprintln(\"热启动起始点迭代次数: $(warm_results.iterations)\")","category":"page"},{"location":"examples/power_flow.html#处理收敛问题","page":"潮流计算示例","title":"处理收敛问题","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"处理难以收敛的情况：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 创建一个难以收敛的案例\ndifficult_case = deepcopy(case)\n# 增加负荷，减少电压支撑\ndifficult_case.bus[:, PD] *= 1.5\n# 降低发电机电压设定点\ndifficult_case.gen[:, VG] *= 0.95\n\n# 尝试标准计算\ntry\n    standard_results = runpf(difficult_case)\n    println(\"标准方法成功收敛\")\ncatch e\n    println(\"标准方法未能收敛: $e\")\n    \n    # 使用改进的选项\n    robust_opt = Dict(\n        \"pf_alg\" => \"NR\",\n        \"max_it\" => 100,       # 增加迭代次数\n        \"pf_tol\" => 1e-4,      # 放宽收敛标准\n        \"enforce_q_lims\" => 0, # 暂时不考虑无功限制\n        \"verbose\" => 2\n    )\n    \n    try\n        robust_results = runpf(difficult_case, robust_opt)\n        println(\"改进方法成功收敛，迭代次数: $(robust_results.iterations)\")\n    catch e2\n        println(\"改进方法仍未收敛: $e2\")\n        \n        # 使用连续潮流法\n        continuation_opt = Dict(\n            \"pf_alg\" => \"CONT\",  # 连续潮流法\n            \"verbose\" => 2\n        )\n        \n        try\n            cont_results = runpf(difficult_case, continuation_opt)\n            println(\"连续潮流法成功收敛\")\n        catch e3\n            println(\"连续潮流法未能收敛: $e3\")\n        end\n    end\nend","category":"page"},{"location":"examples/power_flow.html#GPU加速计算","page":"潮流计算示例","title":"GPU加速计算","text":"","category":"section"},{"location":"examples/power_flow.html#使用GPU加速大规模系统计算","page":"潮流计算示例","title":"使用GPU加速大规模系统计算","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"对于大规模系统，可以使用GPU加速计算：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 检查是否有可用的GPU\nusing CUDA\nif CUDA.functional()\n    # 加载大规模系统\n    large_case = load_case(\"case1888rte.m\")\n    \n    # 使用CPU计算\n    println(\"使用CPU计算...\")\n    @time cpu_results = runpf(large_case)\n    \n    # 使用GPU加速计算\n    println(\"使用GPU加速计算...\")\n    gpu_opt = Dict(\"use_gpu\" => true)\n    @time gpu_results = runpf(large_case, gpu_opt)\n    \n    # 比较结果\n    cpu_losses = sum(cpu_results.branch[:, PL])\n    gpu_losses = sum(gpu_results.branch[:, PL])\n    println(\"CPU计算的系统损耗: $cpu_losses MW\")\n    println(\"GPU计算的系统损耗: $gpu_losses MW\")\n    println(\"相对误差: $(abs(cpu_losses - gpu_losses) / cpu_losses * 100)%\")\nelse\n    println(\"没有可用的GPU或CUDA环境\")\nend","category":"page"},{"location":"examples/power_flow.html#混合交直流系统","page":"潮流计算示例","title":"混合交直流系统","text":"","category":"section"},{"location":"examples/power_flow.html#混合交直流潮流计算","page":"潮流计算示例","title":"混合交直流潮流计算","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"计算包含交流和直流部分的混合系统：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 加载混合交直流系统案例\nhybrid_case = load_case(\"case_hybrid.m\")\n\n# 执行混合交直流潮流计算\nhybrid_results = runpf(hybrid_case)\n\n# 查看交流部分结果\nprintln(\"交流系统结果:\")\nprintln(\"  交流母线数量: $(sum(hybrid_results.bus[:, BUS_TYPE] .!= BUS_TYPE_DC))\")\nprintln(\"  交流系统总发电: $(sum(hybrid_results.gen[hybrid_results.gen[:, GEN_STATUS] .== 1, PG])) MW\")\nprintln(\"  交流系统总负荷: $(sum(hybrid_results.bus[hybrid_results.bus[:, BUS_TYPE] .!= BUS_TYPE_DC, PD])) MW\")\nprintln(\"  交流系统总损耗: $(sum(hybrid_results.branch[hybrid_results.branch[:, BR_TYPE] .== BR_TYPE_AC, PL])) MW\")\n\n# 查看直流部分结果\nprintln(\"直流系统结果:\")\nprintln(\"  直流母线数量: $(sum(hybrid_results.bus[:, BUS_TYPE] .== BUS_TYPE_DC))\")\nprintln(\"  直流系统总负荷: $(sum(hybrid_results.bus[hybrid_results.bus[:, BUS_TYPE] .== BUS_TYPE_DC, PD])) MW\")\nprintln(\"  直流系统总损耗: $(sum(hybrid_results.branch[hybrid_results.branch[:, BR_TYPE] .== BR_TYPE_DC, PL])) MW\")\n\n# 查看换流器结果\nprintln(\"换流器结果:\")\nfor i in 1:size(hybrid_results.converter, 1)\n    conv_id = hybrid_results.converter[i, CONV_ID]\n    ac_bus = hybrid_results.converter[i, CONV_AC_BUS]\n    dc_bus = hybrid_results.converter[i, CONV_DC_BUS]\n    p_ac = hybrid_results.converter[i, CONV_P_AC]\n    p_dc = hybrid_results.converter[i, CONV_P_DC]\n    loss = hybrid_results.converter[i, CONV_LOSS]\n    \n    println(\"  换流器 $conv_id (AC母线 $ac_bus - DC母线 $dc_bus):\")\n    println(\"    交流侧功率: $p_ac MW\")\n    println(\"    直流侧功率: $p_dc MW\")\n    println(\"    换流损耗: $loss MW\")\n    println(\"    效率: $((abs(p_dc) / abs(p_ac)) * 100)%\")\nend","category":"page"},{"location":"examples/power_flow.html#结果分析与处理","page":"潮流计算示例","title":"结果分析与处理","text":"","category":"section"},{"location":"examples/power_flow.html#详细的结果分析","page":"潮流计算示例","title":"详细的结果分析","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"深入分析潮流计算结果：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 执行潮流计算\nresults = runpf(case)\n\n# 分析母线电压分布\nvm = results.bus[:, VM]\nva = results.bus[:, VA]\n\nprintln(\"电压统计:\")\nprintln(\"  最高电压: $(maximum(vm)) pu，位于母线 $(results.bus[argmax(vm), BUS_I])\")\nprintln(\"  最低电压: $(minimum(vm)) pu，位于母线 $(results.bus[argmin(vm), BUS_I])\")\nprintln(\"  平均电压: $(mean(vm)) pu\")\nprintln(\"  标准差: $(std(vm)) pu\")\n\n# 分析支路功率流\nbranch_flow = results.branch[:, PF]\nbranch_from = results.branch[:, F_BUS]\nbranch_to = results.branch[:, T_BUS]\nbranch_rate = results.branch[:, RATE_A]\n\n# 计算支路负载率\nloading_rate = abs.(branch_flow) ./ branch_rate * 100\nbranch_rate_valid = branch_rate .> 0  # 只考虑有额定值的支路\n\nif any(branch_rate_valid)\n    max_loading_idx = argmax(loading_rate .* branch_rate_valid)\n    println(\"支路负载率统计(对有额定值的支路):\")\n    println(\"  最高负载率: $(loading_rate[max_loading_idx])%，位于支路 $(branch_from[max_loading_idx])-$(branch_to[max_loading_idx])\")\n    println(\"  平均负载率: $(mean(loading_rate[branch_rate_valid]))%\")\nend\n\n# 分析发电机出力\ngen_pg = results.gen[:, PG]\ngen_qg = results.gen[:, QG]\ngen_bus = results.gen[:, GEN_BUS]\ngen_pmax = results.gen[:, PMAX]\ngen_pmin = results.gen[:, PMIN]\ngen_qmax = results.gen[:, QMAX]\ngen_qmin = results.gen[:, QMIN]\n\n# 检查发电机是否达到限制\np_at_max = abs.(gen_pg - gen_pmax) .< 1e-3\np_at_min = abs.(gen_pg - gen_pmin) .< 1e-3\nq_at_max = abs.(gen_qg - gen_qmax) .< 1e-3\nq_at_min = abs.(gen_qg - gen_qmin) .< 1e-3\n\nprintln(\"发电机限制状态:\")\nprintln(\"  有功达到上限的发电机数量: $(sum(p_at_max))\")\nprintln(\"  有功达到下限的发电机数量: $(sum(p_at_min))\")\nprintln(\"  无功达到上限的发电机数量: $(sum(q_at_max))\")\nprintln(\"  无功达到下限的发电机数量: $(sum(q_at_min))\")\n\n# 分析系统损耗\ntotal_gen = sum(gen_pg)\ntotal_load = sum(results.bus[:, PD])\ntotal_loss = total_gen - total_load\n\nprintln(\"系统损耗分析:\")\nprintln(\"  总发电: $total_gen MW\")\nprintln(\"  总负荷: $total_load MW\")\nprintln(\"  总损耗: $total_loss MW\")\nprintln(\"  损耗率: $(total_loss / total_gen * 100)%\")","category":"page"},{"location":"examples/power_flow.html#结果导出与可视化","page":"潮流计算示例","title":"结果导出与可视化","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"导出和可视化计算结果：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"using DataFrames, CSV, Plots\n\n# 将结果转换为DataFrame格式\n# 母线结果\nbus_df = DataFrame(\n    Bus_ID = results.bus[:, BUS_I],\n    Type = results.bus[:, BUS_TYPE],\n    Voltage_Magnitude = results.bus[:, VM],\n    Voltage_Angle = results.bus[:, VA],\n    Load_MW = results.bus[:, PD],\n    Load_MVAr = results.bus[:, QD]\n)\n\n# 支路结果\nbranch_df = DataFrame(\n    From_Bus = results.branch[:, F_BUS],\n    To_Bus = results.branch[:, T_BUS],\n    Power_Flow_MW = results.branch[:, PF],\n    Power_Flow_MVAr = results.branch[:, QF],\n    Loss_MW = results.branch[:, PL],\n    Loss_MVAr = results.branch[:, QL]\n)\n\n# 发电机结果\ngen_df = DataFrame(\n    Bus_ID = results.gen[:, GEN_BUS],\n    Active_Power_MW = results.gen[:, PG],\n    Reactive_Power_MVAr = results.gen[:, QG],\n    Voltage_Setpoint = results.gen[:, VG]\n)\n\n# 导出到CSV文件\nCSV.write(\"bus_results.csv\", bus_df)\nCSV.write(\"branch_results.csv\", branch_df)\nCSV.write(\"gen_results.csv\", gen_df)\n\n# 创建电压分布图\np1 = bar(bus_df.Bus_ID, bus_df.Voltage_Magnitude,\n    title=\"母线电压分布\",\n    xlabel=\"母线编号\",\n    ylabel=\"电压幅值(pu)\",\n    legend=false)\n\n# 创建功率流分布图\np2 = bar(1:size(branch_df, 1), abs.(branch_df.Power_Flow_MW),\n    title=\"支路功率流分布\",\n    xlabel=\"支路编号\",\n    ylabel=\"功率流大小(MW)\",\n    legend=false)\n\n# 创建损耗分布图\np3 = bar(1:size(branch_df, 1), branch_df.Loss_MW,\n    title=\"支路损耗分布\",\n    xlabel=\"支路编号\",\n    ylabel=\"有功损耗(MW)\",\n    legend=false)\n\n# 组合图表\nplot(p1, p2, p3, layout=(3,1), size=(800, 1200))\nsavefig(\"power_flow_results.png\")","category":"page"},{"location":"examples/power_flow.html#高级应用","page":"潮流计算示例","title":"高级应用","text":"","category":"section"},{"location":"examples/power_flow.html#或然性分析","page":"潮流计算示例","title":"或然性分析","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"进行简单的或然性分析：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 定义要分析的线路中断情况\noutage_branches = [1, 5, 10]\n\n# 保存原始案例\nbase_case = deepcopy(case)\nbase_results = runpf(base_case)\n\nprintln(\"基础情况:\")\nprintln(\"  总发电: $(sum(base_results.gen[:, PG])) MW\")\nprintln(\"  总损耗: $(sum(base_results.branch[:, PL])) MW\")\nprintln(\"  最低电压: $(minimum(base_results.bus[:, VM])) pu\")\n\n# 分析每个中断情况\nfor br_idx in outage_branches\n    # 创建中断情况\n    outage_case = deepcopy(base_case)\n    from_bus = outage_case.branch[br_idx, F_BUS]\n    to_bus = outage_case.branch[br_idx, T_BUS]\n    outage_case.branch[br_idx, BR_STATUS] = 0  # 断开线路\n    \n    println(\"\\n分析线路 $from_bus-$to_bus 中断情况:\")\n    \n    # 执行潮流计算\n    try\n        outage_results = runpf(outage_case)\n        \n        # 分析结果\n        total_gen = sum(outage_results.gen[:, PG])\n        total_loss = sum(outage_results.branch[:, PL])\n        min_voltage = minimum(outage_results.bus[:, VM])\n        \n        # 找出最大负载率\n        loading_rate = abs.(outage_results.branch[:, PF]) ./ outage_results.branch[:, RATE_A] * 100\n        branch_rate_valid = outage_results.branch[:, RATE_A] .> 0\n        if any(branch_rate_valid)\n            max_loading = maximum(loading_rate .* branch_rate_valid)\n            max_loading_idx = argmax(loading_rate .* branch_rate_valid)\n            overloaded = loading_rate .> 100 .& branch_rate_valid\n            \n            println(\"  总发电: $total_gen MW\")\n            println(\"  总损耗: $total_loss MW\")\n            println(\"  最低电压: $min_voltage pu\")\n            println(\"  最大支路负载率: $max_loading%\")\n            println(\"  过载支路数量: $(sum(overloaded))\")\n            \n            if sum(overloaded) > 0\n                for i in findall(overloaded)\n                    from = outage_results.branch[i, F_BUS]\n                    to = outage_results.branch[i, T_BUS]\n                    load_rate = loading_rate[i]\n                    println(\"    过载支路 $from-$to: $load_rate%\")\n                end\n            end\n        end\n    catch e\n        println(\"  潮流计算未收敛: $e\")\n    end\nend","category":"page"},{"location":"examples/power_flow.html#灵敏度分析","page":"潮流计算示例","title":"灵敏度分析","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"进行简单的灵敏度分析：","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"# 执行基础潮流计算\nbase_results = runpf(case)\nbase_losses = sum(base_results.branch[:, PL])\n\n# 定义要分析的参数和变化范围\nload_factors = 0.8:0.05:1.2\n\n# 存储结果\nloss_results = zeros(length(load_factors))\nvoltage_results = zeros(length(load_factors))\n\n# 进行灵敏度分析\nfor (i, factor) in enumerate(load_factors)\n    # 修改负荷\n    test_case = deepcopy(case)\n    test_case.bus[:, PD] = case.bus[:, PD] * factor\n    test_case.bus[:, QD] = case.bus[:, QD] * factor\n    \n    # 执行潮流计算\n    try\n        test_results = runpf(test_case)\n        \n        # 记录结果\n        loss_results[i] = sum(test_results.branch[:, PL])\n        voltage_results[i] = minimum(test_results.bus[:, VM])\n    catch e\n        println(\"负荷因子 $factor 时潮流计算未收敛: $e\")\n        loss_results[i] = NaN\n        voltage_results[i] = NaN\n    end\nend\n\n# 计算灵敏度\nvalid_indices = .!isnan.(loss_results)\nif sum(valid_indices) >= 2\n    # 计算损耗对负荷的灵敏度\n    loss_sensitivity = (loss_results[valid_indices] .- base_losses) ./ (load_factors[valid_indices] .- 1.0) ./ base_losses\n    \n    println(\"损耗对负荷变化的灵敏度:\")\n    for (f, s) in zip(load_factors[valid_indices], loss_sensitivity)\n        println(\"  负荷因子 $f: 灵敏度 $s\")\n    end\n    \n    # 绘制灵敏度曲线\n    p1 = plot(load_factors, loss_results,\n        title=\"系统损耗对负荷变化的灵敏度\",\n        xlabel=\"负荷因子\",\n        ylabel=\"系统损耗(MW)\",\n        marker=:circle,\n        label=\"系统损耗\")\n    \n    p2 = plot(load_factors, voltage_results,\n        title=\"最低电压对负荷变化的灵敏度\",\n        xlabel=\"负荷因子\",\n        ylabel=\"最低电压(pu)\",\n        marker=:circle,\n        label=\"最低电压\")\n    \n    plot(p1, p2, layout=(2,1), size=(800, 800))\n    savefig(\"sensitivity_analysis.png\")\nend","category":"page"},{"location":"examples/power_flow.html#结论","page":"潮流计算示例","title":"结论","text":"","category":"section"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"本文档展示了 PowerFlow 模块的各种功能和应用场景，从基础的潮流计算到高级的系统分析。通过这些示例，用户可以了解如何:","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"使用不同的潮流计算算法\n配置高级计算选项\n处理混合交直流系统\n分析和可视化计算结果\n进行或然性和灵敏度分析","category":"page"},{"location":"examples/power_flow.html","page":"潮流计算示例","title":"潮流计算示例","text":"PowerFlow 模块提供了强大而灵活的功能，可以满足从教学到研究再到工程实践的各种需求。通过合理配置和使用这些功能，用户可以高效地分析和解决电力系统中的各种问题。","category":"page"},{"location":"examples/visualization.html#PowerFlow-可视化示例","page":"可视化示例","title":"PowerFlow 可视化示例","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"本文档提供了 PowerFlow 库中可视化功能的详细使用示例，展示了如何创建各种类型的图表和可视化效果，以便更好地理解和分析电力系统的计算结果。","category":"page"},{"location":"examples/visualization.html#基础可视化","page":"可视化示例","title":"基础可视化","text":"","category":"section"},{"location":"examples/visualization.html#系统拓扑图","page":"可视化示例","title":"系统拓扑图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建电力系统的拓扑图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"using PowerFlow\nusing TimeSeriesPowerFlow\nusing Utils\nusing Plots\nusing GraphPlot\nusing LightGraphs\n\n# 加载标准测试系统\ncase = load_case(\"case14.m\")\n\n# 创建系统拓扑图\nplot_system_topology(case)\n\n# 保存图像\nsavefig(\"system_topology.png\")","category":"page"},{"location":"examples/visualization.html#自定义拓扑图","page":"可视化示例","title":"自定义拓扑图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建带有自定义布局和样式的拓扑图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 创建自定义拓扑图\nplot_system_topology(case, \n    node_size = [degree(case, i) * 3 for i in 1:size(case.bus, 1)],  # 基于节点度的大小\n    node_color = [:red for i in 1:size(case.bus, 1)],                # 自定义节点颜色\n    edge_width = [case.branch[i, BR_R] * 10 + 1 for i in 1:size(case.branch, 1)],  # 基于电阻的边宽度\n    layout = spring_layout,                                          # 使用弹簧布局算法\n    labels = [\"B$(Int(case.bus[i, BUS_I]))\" for i in 1:size(case.bus, 1)]  # 添加标签\n)\n\n# 保存图像\nsavefig(\"custom_topology.png\")","category":"page"},{"location":"examples/visualization.html#带有电气参数的拓扑图","page":"可视化示例","title":"带有电气参数的拓扑图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建显示电气参数的拓扑图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 执行潮流计算\nresults = runpf(case)\n\n# 创建带有电气参数的拓扑图\nplot_system_topology_with_results(case, results,\n    show_voltage = true,     # 显示电压值\n    show_power_flow = true,  # 显示功率流\n    show_losses = true,      # 显示损耗\n    edge_color_by_loading = true  # 根据负载率着色\n)\n\n# 保存图像\nsavefig(\"topology_with_results.png\")","category":"page"},{"location":"examples/visualization.html#电压分析可视化","page":"可视化示例","title":"电压分析可视化","text":"","category":"section"},{"location":"examples/visualization.html#电压分布图","page":"可视化示例","title":"电压分布图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建系统电压分布图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 执行潮流计算\nresults = runpf(case)\n\n# 提取电压值\nvm = results.bus[:, VM]\nbus_ids = results.bus[:, BUS_I]\n\n# 创建电压分布条形图\nbar(bus_ids, vm,\n    title = \"母线电压分布\",\n    xlabel = \"母线编号\",\n    ylabel = \"电压幅值(pu)\",\n    legend = false,\n    ylims = (0.9, 1.1),\n    color = :blue,\n    linewidth = 2,\n    grid = true\n)\n\n# 添加参考线\nhline!([1.0], color = :red, linestyle = :dash, label = \"标称电压\")\nhline!([0.95, 1.05], color = :orange, linestyle = :dot, label = \"限制\")\n\n# 保存图像\nsavefig(\"voltage_distribution.png\")","category":"page"},{"location":"examples/visualization.html#电压等高线图","page":"可视化示例","title":"电压等高线图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建系统电压等高线图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 执行潮流计算\nresults = runpf(case)\n\n# 获取母线位置信息\n# 注意：实际应用中需要有母线的地理坐标\n# 这里我们使用一个示例坐标\nbus_x = [0, 1, 2, 3, 2, 1, 0, 1, 2, 3, 2, 1, 2, 3]\nbus_y = [0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4]\n\n# 提取电压值\nvm = results.bus[:, VM]\n\n# 创建网格\nn = 100\nx_grid = range(minimum(bus_x) - 0.5, maximum(bus_x) + 0.5, length = n)\ny_grid = range(minimum(bus_y) - 0.5, maximum(bus_y) + 0.5, length = n)\nz_grid = zeros(n, n)\n\n# 使用反距离加权插值\nfor i in 1:n\n    for j in 1:n\n        weights = 1.0 ./ sqrt.((x_grid[i] .- bus_x).^2 + (y_grid[j] .- bus_y).^2)\n        z_grid[j, i] = sum(weights .* vm) / sum(weights)\n    end\nend\n\n# 创建等高线图\ncontour(x_grid, y_grid, z_grid,\n    title = \"电压等高线图\",\n    xlabel = \"X坐标\",\n    ylabel = \"Y坐标\",\n    fill = true,\n    levels = 15,\n    c = :viridis\n)\n\n# 添加母线位置\nscatter!(bus_x, bus_y,\n    marker = :circle,\n    markersize = 5,\n    color = :black,\n    label = \"母线位置\"\n)\n\n# 添加母线标签\nfor i in 1:length(bus_x)\n    annotate!(bus_x[i], bus_y[i], text(\"B$(Int(case.bus[i, BUS_I]))\", :black, 8))\nend\n\n# 保存图像\nsavefig(\"voltage_contour.png\")","category":"page"},{"location":"examples/visualization.html#3D电压曲面图","page":"可视化示例","title":"3D电压曲面图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建3D电压曲面图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 创建3D电压曲面图\nsurface(x_grid, y_grid, z_grid,\n    title = \"3D电压曲面图\",\n    xlabel = \"X坐标\",\n    ylabel = \"Y坐标\",\n    zlabel = \"电压幅值(pu)\",\n    color = :viridis,\n    camera = (30, 45)\n)\n\n# 添加母线位置\nscatter!(bus_x, bus_y, vm,\n    marker = :circle,\n    markersize = 3,\n    color = :red,\n    label = \"母线\"\n)\n\n# 保存图像\nsavefig(\"voltage_surface_3d.png\")","category":"page"},{"location":"examples/visualization.html#功率流可视化","page":"可视化示例","title":"功率流可视化","text":"","category":"section"},{"location":"examples/visualization.html#功率流分布图","page":"可视化示例","title":"功率流分布图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建功率流分布图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 提取支路功率流\nbranch_flow = abs.(results.branch[:, PF])\nbranch_from = results.branch[:, F_BUS]\nbranch_to = results.branch[:, T_BUS]\n\n# 创建功率流分布条形图\nbar(1:length(branch_flow), branch_flow,\n    title = \"支路功率流分布\",\n    xlabel = \"支路编号\",\n    ylabel = \"功率流大小(MW)\",\n    legend = false,\n    color = :green,\n    linewidth = 2,\n    grid = true\n)\n\n# 添加支路标签\nxticks!(1:length(branch_flow), [\"$(Int(branch_from[i]))-$(Int(branch_to[i]))\" for i in 1:length(branch_flow)])\nxtickfont(8, rotation = 45)\n\n# 保存图像\nsavefig(\"power_flow_distribution.png\")","category":"page"},{"location":"examples/visualization.html#支路负载率图","page":"可视化示例","title":"支路负载率图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建支路负载率图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 计算支路负载率\nbranch_rate = results.branch[:, RATE_A]\nloading_rate = zeros(length(branch_flow))\n\nfor i in 1:length(branch_flow)\n    if branch_rate[i] > 0\n        loading_rate[i] = branch_flow[i] / branch_rate[i] * 100\n    else\n        loading_rate[i] = 0  # 对于没有额定值的支路\n    end\nend\n\n# 创建负载率条形图\nbar(1:length(loading_rate), loading_rate,\n    title = \"支路负载率\",\n    xlabel = \"支路编号\",\n    ylabel = \"负载率(%)\",\n    legend = false,\n    color = [loading_rate[i] > 80 ? :red : (loading_rate[i] > 50 ? :orange : :green) for i in 1:length(loading_rate)],\n    linewidth = 2,\n    grid = true\n)\n\n# 添加支路标签\nxticks!(1:length(loading_rate), [\"$(Int(branch_from[i]))-$(Int(branch_to[i]))\" for i in 1:length(loading_rate)])\nxtickfont(8, rotation = 45)\n\n# 添加警告线\nhline!([80], color = :red, linestyle = :dash, label = \"警告阈值(80%)\")\nhline!([100], color = :black, linestyle = :dash, label = \"额定容量(100%)\")\n\n# 保存图像\nsavefig(\"branch_loading_rate.png\")","category":"page"},{"location":"examples/visualization.html#功率流箭头图","page":"可视化示例","title":"功率流箭头图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建带有功率流方向的箭头图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 创建带有功率流方向的箭头图\nplot_power_flow_arrows(case, results,\n    arrow_scale = 0.2,           # 箭头大小比例\n    flow_color_by_value = true,  # 根据功率流大小着色\n    show_values = true           # 显示功率流数值\n)\n\n# 保存图像\nsavefig(\"power_flow_arrows.png\")","category":"page"},{"location":"examples/visualization.html#时间序列可视化","page":"可视化示例","title":"时间序列可视化","text":"","category":"section"},{"location":"examples/visualization.html#基本时间序列图","page":"可视化示例","title":"基本时间序列图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建基本的时间序列图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 执行时间序列潮流计算\nload_file = \"load_data.xlsx\"\nts_results = runtdpf(case, load_file)\n\n# 提取时间序列数据\ntime_points = ts_results.time_points\ntotal_load = zeros(length(time_points))\ntotal_gen = zeros(length(time_points))\ntotal_loss = zeros(length(time_points))\nmin_voltage = zeros(length(time_points))\n\nfor t in 1:length(time_points)\n    if ts_results.success[t]\n        result = ts_results.bus_results[t]\n        total_load[t] = sum(result.bus[:, PD])\n        total_gen[t] = sum(result.gen[:, PG])\n        total_loss[t] = sum(result.branch[:, PL])\n        min_voltage[t] = minimum(result.bus[:, VM])\n    end\nend\n\n# 创建时间序列图\nplot(time_points, [total_load total_gen total_loss],\n    title = \"系统时间序列\",\n    xlabel = \"时间(小时)\",\n    ylabel = \"功率(MW)\",\n    label = [\"总负荷\" \"总发电\" \"总损耗\"],\n    marker = [:circle :square :diamond],\n    linewidth = 2,\n    grid = true,\n    legend = :topleft\n)\n\n# 保存图像\nsavefig(\"time_series_basic.png\")","category":"page"},{"location":"examples/visualization.html#多轴时间序列图","page":"可视化示例","title":"多轴时间序列图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建带有多个Y轴的时间序列图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 创建带有多个Y轴的时间序列图\np1 = plot(time_points, total_load,\n    title = \"系统负荷和电压时间序列\",\n    xlabel = \"时间(小时)\",\n    ylabel = \"负荷(MW)\",\n    color = :blue,\n    marker = :circle,\n    linewidth = 2,\n    label = \"总负荷\",\n    legend = :topleft\n)\n\n# 添加第二个Y轴\nplot!(twinx(), time_points, min_voltage,\n    ylabel = \"电压(pu)\",\n    color = :red,\n    marker = :square,\n    linewidth = 2,\n    label = \"最低电压\",\n    legend = :topright\n)\n\n# 保存图像\nsavefig(\"time_series_dual_axis.png\")","category":"page"},{"location":"examples/visualization.html#热力图","page":"可视化示例","title":"热力图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建时间序列热力图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 提取所有母线的电压时间序列\nvoltage_ts = zeros(length(time_points), size(case.bus, 1))\n\nfor t in 1:length(time_points)\n    if ts_results.success[t]\n        voltage_ts[t, :] = ts_results.bus_results[t].bus[:, VM]\n    end\nend\n\n# 创建电压热力图\nheatmap(1:size(case.bus, 1), time_points, voltage_ts,\n    title = \"母线电压热力图\",\n    xlabel = \"母线编号\",\n    ylabel = \"时间(小时)\",\n    color = :viridis,\n    colorbar_title = \"电压(pu)\"\n)\n\n# 保存图像\nsavefig(\"voltage_heatmap.png\")\n\n# 提取所有支路的负载率时间序列\nloading_ts = zeros(length(time_points), size(case.branch, 1))\n\nfor t in 1:length(time_points)\n    if ts_results.success[t]\n        for i in 1:size(case.branch, 1)\n            flow = abs(ts_results.bus_results[t].branch[i, PF])\n            rate = case.branch[i, RATE_A]\n            if rate > 0\n                loading_ts[t, i] = flow / rate * 100\n            end\n        end\n    end\nend\n\n# 创建支路负载率热力图\nheatmap(1:size(case.branch, 1), time_points, loading_ts,\n    title = \"支路负载率热力图\",\n    xlabel = \"支路编号\",\n    ylabel = \"时间(小时)\",\n    color = :thermal,\n    colorbar_title = \"负载率(%)\"\n)\n\n# 保存图像\nsavefig(\"loading_heatmap.png\")","category":"page"},{"location":"examples/visualization.html#高级可视化","page":"可视化示例","title":"高级可视化","text":"","category":"section"},{"location":"examples/visualization.html#桑基图","page":"可视化示例","title":"桑基图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建电力流向的桑基图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"using SankeyPlots\n\n# 执行潮流计算\nresults = runpf(case)\n\n# 准备桑基图数据\n# 提取发电机、负荷和支路数据\ngen_buses = results.gen[:, GEN_BUS]\ngen_output = results.gen[:, PG]\n\n# 创建节点列表\nnodes = []\n# 添加发电节点\nfor i in 1:length(gen_buses)\n    push!(nodes, \"G$(i)_$(Int(gen_buses[i]))\")\nend\n# 添加母线节点\nfor i in 1:size(results.bus, 1)\n    push!(nodes, \"B$(Int(results.bus[i, BUS_I]))\")\nend\n# 添加负荷节点\nload_buses = findall(results.bus[:, PD] .> 0)\nfor i in load_buses\n    push!(nodes, \"L$(Int(results.bus[i, BUS_I]))\")\nend\n\n# 创建链接列表\nlinks = []\nlink_values = []\n\n# 发电机到母线的链接\nfor i in 1:length(gen_buses)\n    gen_idx = \"G$(i)_$(Int(gen_buses[i]))\"\n    bus_idx = \"B$(Int(gen_buses[i]))\"\n    push!(links, (gen_idx, bus_idx))\n    push!(link_values, gen_output[i])\nend\n\n# 母线之间的链接(支路功率流)\nfor i in 1:size(results.branch, 1)\n    from_bus = Int(results.branch[i, F_BUS])\n    to_bus = Int(results.branch[i, T_BUS])\n    power_flow = results.branch[i, PF]\n    \n    if power_flow > 0\n        push!(links, (\"B$(from_bus)\", \"B$(to_bus)\"))\n        push!(link_values, abs(power_flow))\n    else\n        push!(links, (\"B$(to_bus)\", \"B$(from_bus)\"))\n        push!(link_values, abs(power_flow))\n    end\nend\n\n# 母线到负荷的链接\nfor i in load_buses\n    bus_id = Int(results.bus[i, BUS_I])\n    load = results.bus[i, PD]\n    push!(links, (\"B$(bus_id)\", \"L$(bus_id)\"))\n    push!(link_values, load)\nend\n\n# 创建桑基图\nsankey(links, link_values,\n    title = \"电力流向桑基图\",\n    node_labels = nodes,\n    node_colors = [i <= length(gen_buses) ? :green : \n                  (i <= length(gen_buses) + size(results.bus, 1) ? :blue : :red) \n                  for i in 1:length(nodes)],\n    link_color = :gray\n)\n\n# 保存图像\nsavefig(\"power_flow_sankey.png\")","category":"page"},{"location":"examples/visualization.html#雷达图","page":"可视化示例","title":"雷达图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建系统性能雷达图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 执行潮流计算\nresults = runpf(case)\n\n# 计算系统性能指标\nvoltage_deviation = std(results.bus[:, VM])\nvoltage_range = maximum(results.bus[:, VM]) - minimum(results.bus[:, VM])\ntotal_loss = sum(results.branch[:, PL])\nloss_percent = total_loss / sum(results.gen[:, PG]) * 100\nmax_loading = maximum(abs.(results.branch[:, PF]) ./ results.branch[:, RATE_A] .* 100)\ngen_reserve = sum(results.gen[:, PMAX] - results.gen[:, PG]) / sum(results.gen[:, PMAX]) * 100\n\n# 归一化指标(越低越好)\nmax_values = [0.05, 0.2, 50, 10, 100, 100]  # 各指标的最大参考值\nindicators = [voltage_deviation, voltage_range, total_loss, loss_percent, max_loading, 100 - gen_reserve]\nnormalized = min.(indicators ./ max_values, 1)\n\n# 创建雷达图\nlabels = [\"电压偏差\", \"电压范围\", \"总损耗(MW)\", \"损耗率(%)\", \"最大负载率(%)\", \"发电预留(%)\"]\nradar_plot(normalized, labels,\n    title = \"系统性能雷达图\",\n    fill = true,\n    color = :blue,\n    linewidth = 2,\n    grid = true\n)\n\n# 保存图像\nsavefig(\"system_performance_radar.png\")","category":"page"},{"location":"examples/visualization.html#地理信息系统(GIS)可视化","page":"可视化示例","title":"地理信息系统(GIS)可视化","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"使用地理信息创建系统可视化：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"using GeoPlots\n\n# 假设我们有母线的地理坐标\n# 实际应用中应从GIS数据库获取\nbus_lat = [40.0, 40.1, 40.2, 40.1, 39.9, 39.8, 39.7, 39.8, 39.9, 40.0, 40.1, 40.2, 40.3, 40.4]\nbus_lon = [-74.0, -74.1, -74.2, -74.3, -74.2, -74.1, -74.0, -73.9, -73.8, -73.7, -73.8, -73.9, -74.0, -74.1]\n\n# 创建地理地图\ngeoplot(bus_lat, bus_lon,\n    title = \"电力系统地理分布\",\n    marker = :circle,\n    markersize = 8,\n    color = :blue,\n    label = \"母线位置\"\n)\n\n# 添加支路连接\nfor i in 1:size(case.branch, 1)\n    from_idx = findfirst(x -> x == case.branch[i, F_BUS], case.bus[:, BUS_I])\n    to_idx = findfirst(x -> x == case.branch[i, T_BUS], case.bus[:, BUS_I])\n    \n    if from_idx !== nothing && to_idx !== nothing\n        plot!([bus_lat[from_idx], bus_lat[to_idx]], [bus_lon[from_idx], bus_lon[to_idx]],\n            color = :gray,\n            linewidth = 2,\n            label = nothing\n        )\n    end\nend\n\n# 添加母线标签\nfor i in 1:length(bus_lat)\n    annotate!(bus_lat[i], bus_lon[i], text(\"B$(Int(case.bus[i, BUS_I]))\", :black, 8))\nend\n\n# 保存图像\nsavefig(\"geographic_system_map.png\")","category":"page"},{"location":"examples/visualization.html#动态可视化","page":"可视化示例","title":"动态可视化","text":"","category":"section"},{"location":"examples/visualization.html#时间序列动画","page":"可视化示例","title":"时间序列动画","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建电压变化的动画：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"using Plots\n\n# 执行时间序列潮流计算\nts_results = runtdpf(case, load_file)\n\n# 创建电压分布动画\nanim = @animate for t in 1:length(ts_results.time_points)\n    if ts_results.success[t]\n        result = ts_results.bus_results[t]\n        bar(result.bus[:, BUS_I], result.bus[:, VM],\n            title = \"电压分布 - 时间点 $(ts_results.time_points[t])\",\n            xlabel = \"母线编号\",\n            ylabel = \"电压幅值(pu)\",\n            ylims = (0.9, 1.1),\n            legend = false,\n            color = :blue\n        )\n        # 添加参考线\n        hline!([1.0], color = :red, linestyle = :dash, label = \"标称电压\")\n        hline!([0.95, 1.05], color = :orange, linestyle = :dot, label = \"限制\")\n    end\nend\n\n# 保存动画\ngif(anim, \"voltage_animation.gif\", fps = 2)","category":"page"},{"location":"examples/visualization.html#功率流动画","page":"可视化示例","title":"功率流动画","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建功率流变化的动画：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 创建功率流动画\nanim = @animate for t in 1:length(ts_results.time_points)\n    if ts_results.success[t]\n        result = ts_results.bus_results[t]\n        branch_flow = abs.(result.branch[:, PF])\n        \n        bar(1:length(branch_flow), branch_flow,\n            title = \"支路功率流 - 时间点 $(ts_results.time_points[t])\",\n            xlabel = \"支路编号\",\n            ylabel = \"功率流大小(MW)\",\n            legend = false,\n            color = :green\n        )\n    end\nend\n\n# 保存动画\ngif(anim, \"power_flow_animation.gif\", fps = 2)","category":"page"},{"location":"examples/visualization.html#交互式拓扑图","page":"可视化示例","title":"交互式拓扑图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"创建交互式系统拓扑图：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"using PlotlyJS\n\n# 准备节点数据\nnode_x = bus_x\nnode_y = bus_y\nnode_text = [\"母线 $(Int(case.bus[i, BUS_I]))<br>电压: $(round(results.bus[i, VM], digits=3)) pu<br>负荷: $(round(case.bus[i, PD], digits=1)) MW\" for i in 1:length(bus_x)]\nnode_size = [case.bus[i, PD] > 0 ? 10 + case.bus[i, PD] / 2 : 10 for i in 1:length(bus_x)]\nnode_color = [case.bus[i, BUS_TYPE] == 3 ? \"red\" : (case.bus[i, BUS_TYPE] == 2 ? \"blue\" : \"gray\") for i in 1:length(bus_x)]\n\n# 准备边数据\nedge_x = []\nedge_y = []\nedge_text = []\n\nfor i in 1:size(case.branch, 1)\n    from_idx = findfirst(x -> x == case.branch[i, F_BUS], case.bus[:, BUS_I])\n    to_idx = findfirst(x -> x == case.branch[i, T_BUS], case.bus[:, BUS_I])\n    \n    if from_idx !== nothing && to_idx !== nothing\n        push!(edge_x, bus_x[from_idx], bus_x[to_idx], nothing)\n        push!(edge_y, bus_y[from_idx], bus_y[to_idx], nothing)\n        \n        flow = abs(results.branch[i, PF])\n        loss = results.branch[i, PL]\n        text = \"支路 $(Int(case.branch[i, F_BUS]))-$(Int(case.branch[i, T_BUS]))<br>功率流: $(round(flow, digits=2)) MW<br>损耗: $(round(loss, digits=2)) MW\"\n        push!(edge_text, text, text, nothing)\n    end\nend\n\n# 创建边迹线\nedge_trace = scatter(\n    x = edge_x, y = edge_y,\n    line = attr(width = 1.5, color = \"#888\"),\n    hoverinfo = \"text\",\n    text = edge_text,\n    mode = \"lines\"\n)\n\n# 创建节点迹线\nnode_trace = scatter(\n    x = node_x, y = node_y,\n    mode = \"markers\",\n    hoverinfo = \"text\",\n    text = node_text,\n    marker = attr(\n        showscale = true,\n        colorscale = \"YlGnBu\",\n        color = node_color,\n        size = node_size,\n        line = attr(width = 2, color = \"black\")\n    )\n)\n\n# 创建布局\nlayout = Layout(\n    title = \"交互式电力系统拓扑图\",\n    showlegend = false,\n    hovermode = \"closest\",\n    margin = attr(b = 20, l = 5, r = 5, t = 40),\n    xaxis = attr(showgrid = false, zeroline = false, showticklabels = false),\n    yaxis = attr(showgrid = false, zeroline = false, showticklabels = false)\n)\n\n# 创建图表\np = plot([edge_trace, node_trace], layout)\n\n# 保存为HTML文件\nsavefig(p, \"interactive_topology.html\")","category":"page"},{"location":"examples/visualization.html#违例分析可视化","page":"可视化示例","title":"违例分析可视化","text":"","category":"section"},{"location":"examples/visualization.html#电压违例可视化","page":"可视化示例","title":"电压违例可视化","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"可视化电压违例：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"# 执行时间序列潮流计算\nts_results = runtdpf(case, load_file)\n\n# 设置电压限制\nv_min = 0.95\nv_max = 1.05\n\n# 提取电压数据\nvoltage_data = zeros(length(ts_results.time_points), size(case.bus, 1))\nfor t in 1:length(ts_results.time_points)\n    if ts_results.success[t]\n        voltage_data[t, :] = ts_results.bus_results[t].bus[:, VM]\n    end\nend\n\n# 创建电压违例热力图\nvoltage_violations = (voltage_data .< v_min) .| (voltage_data .> v_max)\nviolation_mask = zeros(size(voltage_data))\nviolation_mask[voltage_violations] .= 1\n\n# 使用掩码创建热力图\nheatmap(1:size(case.bus, 1), ts_results.time_points, violation_mask,\n    title = \"电压违例热力图\",\n    xlabel = \"母线编号\",\n    ylabel = \"时间(小时)\",\n    color = cgrad([:white, :red]),\n    colorbar_title = \"违例状态\"\n)\n\n# 保存图像\nsavefig(\"voltage_violations_heatmap.png\")\n\n# 创建违例计数条形图\nviolation_count = sum(voltage_violations, dims=1)[:]\nbar(1:size(case.bus, 1), violation_count,\n    title = \"电压违例计数\",\n    xlabel = \"母线编号\",\n    ylabel = \"违例时间点数量\",\n    color = :red,\n    legend = false\n)\n\n# 保存图像\nsavefig(\"voltage_violations_count.png\")","category":"page"},{"location":"examples/visualization.html#支路过载可视化","page":"可视化示例","title":"支路过载可视化","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"可视化支路过载情况：","category":"page"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"```julia","category":"page"},{"location":"examples/visualization.html#设置负载率阈值","page":"可视化示例","title":"设置负载率阈值","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"loading_threshold = 80  # 80%","category":"page"},{"location":"examples/visualization.html#提取支路负载率数据","page":"可视化示例","title":"提取支路负载率数据","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"loadingdata = zeros(length(tsresults.timepoints), size(case.branch, 1)) for t in 1:length(tsresults.timepoints)     if tsresults.success[t]         for i in 1:size(case.branch, 1)             flow = abs(tsresults.busresults[t].branch[i, PF])             rate = case.branch[i, RATEA]             if rate > 0                 loadingdata[t, i] = flow / rate * 100             end         end     end end","category":"page"},{"location":"examples/visualization.html#创建支路过载热力图","page":"可视化示例","title":"创建支路过载热力图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"loadingviolations = loadingdata .> loadingthreshold violationmask = zeros(size(loadingdata)) violationmask[loading_violations] .= 1","category":"page"},{"location":"examples/visualization.html#使用掩码创建热力图","page":"可视化示例","title":"使用掩码创建热力图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"heatmap(1:size(case.branch, 1), tsresults.timepoints, violationmask,     title = \"支路过载热力图(>$(Expr(:incomplete, Base.Meta.ParseError(\"ParseError:\\n# Error @ none:1:9\\n(loading\\n#       └ ── Expected `)`\", Base.JuliaSyntax.ParseError(Base.JuliaSyntax.SourceFile(\"(loading\", 0, \"none\", 1, [1, 9]), Base.JuliaSyntax.Diagnostic[Base.JuliaSyntax.Diagnostic(9, 8, :error, \"Expected `)`\")], :other))))threshold)%)\",     xlabel = \"支路编号\",     ylabel = \"时间(小时)\",     color = cgrad([:white, :orange]),     colorbar_title = \"违例状态\" )","category":"page"},{"location":"examples/visualization.html#保存图像","page":"可视化示例","title":"保存图像","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"savefig(\"loadingviolationsheatmap.png\")","category":"page"},{"location":"examples/visualization.html#创建违例计数条形图","page":"可视化示例","title":"创建违例计数条形图","text":"","category":"section"},{"location":"examples/visualization.html","page":"可视化示例","title":"可视化示例","text":"violationcount = sum(loadingviolations, dims=1)[:] bar(1:size(case.branch, 1), violation_count,     title = \"支路过载计数\",     xlabel = \"支路编号\",     ylabel = \"违例时间点数量\",     color = :orange,     legend = false )","category":"page"},{"location":"examples/basic.html#Distribution-PowerFlow-库基础示例","page":"基础示例","title":"Distribution PowerFlow 库基础示例","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"本文档提供了 PowerFlow 库的基础使用示例，涵盖了从简单的潮流计算到时间序列分析的典型应用场景。这些示例旨在帮助新用户快速上手并理解库的核心功能。","category":"page"},{"location":"examples/basic.html#安装与导入","page":"基础示例","title":"安装与导入","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"首先，我们需要安装并导入 PowerFlow 库及其相关模块：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 安装库（仅需执行一次）\nusing Pkg\nPkg.add(\"PowerFlow\")\n\n# 导入所需模块\nusing PowerFlow\nusing TimeSeriesPowerFlow\nusing Utils\nusing ComponentModel","category":"page"},{"location":"examples/basic.html#基础潮流计算","page":"基础示例","title":"基础潮流计算","text":"","category":"section"},{"location":"examples/basic.html#加载案例数据","page":"基础示例","title":"加载案例数据","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"PowerFlow 支持多种格式的电力系统案例数据，包括 MATPOWER 格式的 .m 文件：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 加载标准 IEEE 14 节点测试系统\ncase = load_case(\"case14.m\")\n\n# 查看案例基本信息\nprintln(\"系统包含 $(length(case.bus)) 个母线和 $(length(case.branch)) 条支路\")","category":"page"},{"location":"examples/basic.html#执行交流潮流计算","page":"基础示例","title":"执行交流潮流计算","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"最基本的功能是执行交流潮流计算：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 使用默认参数执行交流潮流计算\nresults = runpf(case)\n\n# 检查计算是否收敛\nif results.success\n    println(\"潮流计算成功收敛！\")\nelse\n    println(\"潮流计算未收敛，请检查系统参数\")\nend\n\n# 查看计算结果摘要\nprintln(\"系统总负荷: $(sum(results.bus[:, PD])) MW\")\nprintln(\"系统总损耗: $(sum(results.branch[:, PL])) MW\")","category":"page"},{"location":"examples/basic.html#自定义计算选项","page":"基础示例","title":"自定义计算选项","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"可以通过选项字典自定义潮流计算的参数：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 设置自定义计算选项\nopt = Dict(\n    \"pf_alg\" => \"NR\",        # 使用牛顿-拉夫森法\n    \"pf_tol\" => 1e-6,        # 收敛容差\n    \"max_it\" => 30,          # 最大迭代次数\n    \"verbose\" => 1           # 输出详细信息\n)\n\n# 使用自定义选项执行潮流计算\nresults = runpf(case, opt)","category":"page"},{"location":"examples/basic.html#执行直流潮流计算","page":"基础示例","title":"执行直流潮流计算","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"对于某些应用，直流潮流计算提供了更快的近似解：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 执行直流潮流计算\ndc_results = rundcpf(case)\n\n# 比较直流和交流潮流计算结果\nprintln(\"交流潮流计算的系统总损耗: $(sum(results.branch[:, PL])) MW\")\nprintln(\"直流潮流计算的系统总损耗: $(sum(dc_results.branch[:, PL])) MW\")","category":"page"},{"location":"examples/basic.html#结果分析与可视化","page":"基础示例","title":"结果分析与可视化","text":"","category":"section"},{"location":"examples/basic.html#电压分析","page":"基础示例","title":"电压分析","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"分析系统中的电压分布：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 提取电压幅值和相角\nvm = results.bus[:, VM]\nva = results.bus[:, VA]\n\n# 查找最高和最低电压\nmax_vm_idx = argmax(vm)\nmin_vm_idx = argmin(vm)\n\nprintln(\"最高电压: $(vm[max_vm_idx]) pu，位于母线 $(results.bus[max_vm_idx, BUS_I])\")\nprintln(\"最低电压: $(vm[min_vm_idx]) pu，位于母线 $(results.bus[min_vm_idx, BUS_I])\")\n\n# 绘制电压分布图\nusing Plots\nbar(results.bus[:, BUS_I], vm, \n    title=\"母线电压分布\", \n    xlabel=\"母线编号\", \n    ylabel=\"电压幅值(pu)\",\n    legend=false)","category":"page"},{"location":"examples/basic.html#支路功率流分析","page":"基础示例","title":"支路功率流分析","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"分析系统中的功率流分布：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 提取支路有功功率流\nbranch_flow = results.branch[:, PF]\nbranch_from = results.branch[:, F_BUS]\nbranch_to = results.branch[:, T_BUS]\n\n# 找出功率流最大的支路\nmax_flow_idx = argmax(abs.(branch_flow))\nprintln(\"最大功率流: $(branch_flow[max_flow_idx]) MW，位于支路 $(branch_from[max_flow_idx])-$(branch_to[max_flow_idx])\")\n\n# 绘制功率流分布图\nbar(1:length(branch_flow), abs.(branch_flow),\n    title=\"支路功率流分布\",\n    xlabel=\"支路编号\",\n    ylabel=\"功率流大小(MW)\",\n    legend=false)","category":"page"},{"location":"examples/basic.html#系统修改与重新计算","page":"基础示例","title":"系统修改与重新计算","text":"","category":"section"},{"location":"examples/basic.html#修改负荷","page":"基础示例","title":"修改负荷","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"模拟负荷变化并重新计算潮流：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 保存原始负荷数据\noriginal_load = copy(case.bus[:, PD])\n\n# 增加所有负荷20%\ncase.bus[:, PD] *= 1.2\n\n# 重新计算潮流\nnew_results = runpf(case)\n\n# 比较结果\nprintln(\"原始总负荷: $(sum(original_load)) MW\")\nprintln(\"修改后总负荷: $(sum(case.bus[:, PD])) MW\")\nprintln(\"原始总损耗: $(sum(results.branch[:, PL])) MW\")\nprintln(\"修改后总损耗: $(sum(new_results.branch[:, PL])) MW\")\n\n# 恢复原始负荷\ncase.bus[:, PD] = original_load","category":"page"},{"location":"examples/basic.html#修改发电机出力","page":"基础示例","title":"修改发电机出力","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"调整发电机出力并观察系统响应：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 保存原始发电机数据\noriginal_gen = copy(case.gen)\n\n# 修改特定发电机的出力\ngen_idx = 1  # 第一台发电机\noriginal_pg = case.gen[gen_idx, PG]\ncase.gen[gen_idx, PG] *= 0.8  # 降低到原来的80%\n\n# 重新计算潮流\ngen_results = runpf(case)\n\n# 比较结果\nprintln(\"发电机 $(case.gen[gen_idx, GEN_BUS]) 原始出力: $(original_pg) MW\")\nprintln(\"发电机 $(case.gen[gen_idx, GEN_BUS]) 修改后出力: $(case.gen[gen_idx, PG]) MW\")\nprintln(\"平衡节点原始出力: $(results.gen[findall(x -> x == 3, results.bus[:, BUS_TYPE])[1], PG]) MW\")\nprintln(\"平衡节点修改后出力: $(gen_results.gen[findall(x -> x == 3, gen_results.bus[:, BUS_TYPE])[1], PG]) MW\")\n\n# 恢复原始发电机数据\ncase.gen = original_gen","category":"page"},{"location":"examples/basic.html#时间序列潮流计算","page":"基础示例","title":"时间序列潮流计算","text":"","category":"section"},{"location":"examples/basic.html#基本时间序列分析","page":"基础示例","title":"基本时间序列分析","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"执行一天的时间序列潮流计算：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 准备负荷数据文件\n# load_data.xlsx 应包含24小时的负荷数据\n\n# 执行时间序列潮流计算\nts_results = runtdpf(case, \"load_data.xlsx\")\n\n# 检查计算是否成功\nsuccess_count = sum(ts_results.success)\nprintln(\"成功计算的时间点数量: $success_count / $(length(ts_results.time_points))\")\n\n# 绘制总负荷随时间的变化\ntime_hours = ts_results.time_points\ntotal_load = [sum(result.bus[:, PD]) for result in ts_results.bus_results]\n\nplot(time_hours, total_load,\n     title=\"系统总负荷随时间变化\",\n     xlabel=\"时间(小时)\",\n     ylabel=\"总负荷(MW)\",\n     marker=:circle,\n     legend=false)","category":"page"},{"location":"examples/basic.html#包含可再生能源的时间序列分析","page":"基础示例","title":"包含可再生能源的时间序列分析","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"执行包含光伏发电的时间序列潮流计算：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 准备光照强度数据文件\n# irradiance_data.xlsx 应包含24小时的光照强度数据\n\n# 执行包含光照数据的时间序列潮流计算\npv_results = runtdpf(case, \"load_data.xlsx\", \"irradiance_data.xlsx\")\n\n# 分析光伏发电输出\nplot_time_day = 1  # 分析第一天的数据\n\n# 绘制电压分析图\nplot_voltage_time_series(pv_results, case, plot_time_day)\n\n# 绘制系统损耗分析图\nplot_losses_time_series(pv_results, case, plot_time_day)","category":"page"},{"location":"examples/basic.html#动态经济调度","page":"基础示例","title":"动态经济调度","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"执行考虑电价的动态经济调度：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 准备电价数据文件\n# price_data.xlsx 应包含24小时的电价数据\n\n# 设置动态调度选项\ndispatch_opt = Dict(\"mode\" => \"dynamic_dispatch\")\n\n# 执行动态经济调度计算\ndispatch_results = runtdpf(case, \"load_data.xlsx\", \"irradiance_data.xlsx\", \"price_data.xlsx\", dispatch_opt)\n\n# 分析调度结果\nplot_PD_time_series(dispatch_results, case, 1)\n\n# 分析功率流越限情况\nflow_violations = plot_flow_violations(dispatch_results, case, 1, 3.0)","category":"page"},{"location":"examples/basic.html#辅助功能应用","page":"基础示例","title":"辅助功能应用","text":"","category":"section"},{"location":"examples/basic.html#内部/外部编号转换","page":"基础示例","title":"内部/外部编号转换","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"处理系统中的编号转换：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 转换为内部编号\ninternal_case, i2e = ext2int(case)\n\n# 执行潮流计算\ninternal_results = runpf(internal_case)\n\n# 转换回外部编号\nexternal_results = int2ext(i2e, internal_results)\n\n# 验证转换结果\nprintln(\"内部编号的母线数量: $(size(internal_results.bus, 1))\")\nprintln(\"外部编号的母线数量: $(size(external_results.bus, 1))\")","category":"page"},{"location":"examples/basic.html#孤岛识别与提取","page":"基础示例","title":"孤岛识别与提取","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"识别系统中的孤岛：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 创建包含孤岛的测试系统\ntest_case = copy(case)\n\n# 断开某些线路以创建孤岛\ndisconnect_branches = [1, 5, 10]\nfor br_idx in disconnect_branches\n    test_case.branch[br_idx, BR_STATUS] = 0\nend\n\n# 识别孤岛\nislands = find_islands(test_case)\nprintln(\"识别到 $(length(islands)) 个孤岛\")\n\n# 提取最大的孤岛\nmain_island = extract_islands(test_case, islands[1])\nprintln(\"主孤岛包含 $(size(main_island.bus, 1)) 个母线\")\n\n# 对主孤岛执行潮流计算\nisland_results = runpf(main_island)","category":"page"},{"location":"examples/basic.html#混合交直流系统分析","page":"基础示例","title":"混合交直流系统分析","text":"","category":"section"},{"location":"examples/basic.html#重新编号混合系统","page":"基础示例","title":"重新编号混合系统","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"处理混合交直流系统：","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"# 加载混合交直流系统案例\nhybrid_case = load_case(\"hybrid_case.m\")\n\n# 重新编号混合系统\nrenumbered_case = renumber_hybrid_system(hybrid_case)\n\n# 执行混合系统潮流计算\nhybrid_results = runpf(renumbered_case)","category":"page"},{"location":"examples/basic.html#结论","page":"基础示例","title":"结论","text":"","category":"section"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"以上示例展示了 PowerFlow 库的基本用法，包括潮流计算、结果分析、时间序列分析和辅助功能。这些示例可以作为开发更复杂应用的起点，用户可以根据自己的需求进行扩展和定制。","category":"page"},{"location":"examples/basic.html","page":"基础示例","title":"基础示例","text":"要了解更多高级功能，请参考其他示例文档和完整的 API 参考文档。","category":"page"},{"location":"getting_started.html#PowerFlow-入门指南","page":"入门指南","title":"PowerFlow 入门指南","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"本指南将帮助您快速上手 PowerFlow 库，介绍基本概念、安装步骤以及如何执行简单的潮流计算。通过本指南，您将了解 PowerFlow 库的核心功能并能够开始自己的电力系统分析。","category":"page"},{"location":"getting_started.html#什么是-PowerFlow？","page":"入门指南","title":"什么是 PowerFlow？","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"PowerFlow 是一个用 Julia 语言编写的高性能电力系统分析库，专注于潮流计算和相关分析。它提供了从基础潮流计算到高级时间序列分析的全套工具，适用于研究、教学和工程应用。","category":"page"},{"location":"getting_started.html#主要特点","page":"入门指南","title":"主要特点","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"高性能：利用 Julia 语言的高性能特性和并行计算能力\n易用性：简洁直观的 API 设计，降低学习曲线\n灵活性：支持多种潮流算法和系统模型\n可扩展性：模块化设计，便于扩展和定制\n可视化：丰富的可视化工具，便于结果分析和展示","category":"page"},{"location":"getting_started.html#安装","page":"入门指南","title":"安装","text":"","category":"section"},{"location":"getting_started.html#前提条件","page":"入门指南","title":"前提条件","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"在安装 PowerFlow 之前，请确保您的系统满足以下要求：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"Julia 1.6 或更高版本\n支持的操作系统：Windows、macOS、Linux","category":"page"},{"location":"getting_started.html#安装-Julia","page":"入门指南","title":"安装 Julia","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"如果您尚未安装 Julia，请从 Julia 官方网站 下载并安装适合您操作系统的版本。","category":"page"},{"location":"getting_started.html#安装-PowerFlow","page":"入门指南","title":"安装 PowerFlow","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"打开 Julia REPL（交互式命令行），按 ] 键进入包管理模式，然后执行以下命令：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"add PowerFlow","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"如果您需要完整功能（包括时间序列分析和可视化），请安装相关包：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"add PowerFlow TimeSeriesPowerFlow PowerFlowVisualization","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"验证安装是否成功：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\nprintln(\"PowerFlow 版本: \", PowerFlow.VERSION)","category":"page"},{"location":"getting_started.html#基本概念","page":"入门指南","title":"基本概念","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"在开始使用 PowerFlow 之前，了解一些基本概念是很有帮助的：","category":"page"},{"location":"getting_started.html#电力系统模型","page":"入门指南","title":"电力系统模型","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"在 PowerFlow 中，电力系统由以下主要组件组成：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"母线 (Bus)：系统中的节点，可以连接发电机、负荷和支路\n发电机 (Generator)：产生电能的设备，连接到母线\n负荷 (Load)：消耗电能的设备，连接到母线\n支路 (Branch)：连接两个母线的元件，如输电线路和变压器","category":"page"},{"location":"getting_started.html#潮流计算","page":"入门指南","title":"潮流计算","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"潮流计算是确定电力系统稳态运行条件的数学过程，主要解决以下问题：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"确定系统中所有母线的电压幅值和相角\n计算所有支路的功率流\n确定发电机的出力和系统损耗","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"PowerFlow 支持多种潮流计算算法，包括：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"牛顿-拉夫森法 (Newton-Raphson)\n快速解耦法 (Fast Decoupled)\n高斯-赛德尔法 (Gauss-Seidel)\n直流潮流法 (DC Power Flow)\n线性分布潮流法 (Linear Distribution Flow)","category":"page"},{"location":"getting_started.html#快速入门示例","page":"入门指南","title":"快速入门示例","text":"","category":"section"},{"location":"getting_started.html#示例-1：基本潮流计算","page":"入门指南","title":"示例 1：基本潮流计算","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"以下是一个简单的例子，展示如何加载测试系统并执行潮流计算：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\n\n# 加载 IEEE 14 节点测试系统\ncase = load_case(\"case14.m\")\n\n# 查看系统基本信息\nprintln(\"系统信息:\")\nprintln(\"  母线数量: \", size(case.bus, 1))\nprintln(\"  发电机数量: \", size(case.gen, 1))\nprintln(\"  支路数量: \", size(case.branch, 1))\nprintln(\"  基准容量: \", case.baseMVA, \" MVA\")\n\n# 执行交流潮流计算\nresults = runpf(case)\n\n# 检查结果\nif results.success\n    println(\"\\n潮流计算成功收敛！\")\n    println(\"  迭代次数: \", results.iterations)\n    println(\"  最大误差: \", results.max_mismatch)\n    println(\"  系统总发电: \", sum(results.gen[:, PG]), \" MW\")\n    println(\"  系统总负荷: \", sum(results.bus[:, PD]), \" MW\")\n    println(\"  系统总损耗: \", sum(results.branch[:, PL]), \" MW\")\n    \n    # 显示部分母线电压结果\n    println(\"\\n母线电压结果 (前5个):\")\n    for i in 1:min(5, size(results.bus, 1))\n        bus_id = Int(results.bus[i, BUS_I])\n        vm = results.bus[i, VM]\n        va = results.bus[i, VA]\n        println(\"  母线 $bus_id: $vm pu ∠ $va°\")\n    end\nelse\n    println(\"潮流计算未收敛，请检查系统参数\")\nend","category":"page"},{"location":"getting_started.html#示例-2：使用不同的潮流算法","page":"入门指南","title":"示例 2：使用不同的潮流算法","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"PowerFlow 支持多种潮流计算算法，您可以根据需要选择合适的算法：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\n\n# 加载测试系统\ncase = load_case(\"case14.m\")\n\n# 使用牛顿-拉夫森法\nnr_opt = Dict(\"pf_alg\" => \"NR\", \"verbose\" => 1)\nnr_results = runpf(case, nr_opt)\nprintln(\"牛顿-拉夫森法迭代次数: \", nr_results.iterations)\n\n# 使用快速解耦法\nfd_opt = Dict(\"pf_alg\" => \"FDXB\", \"verbose\" => 1)\nfd_results = runpf(case, fd_opt)\nprintln(\"快速解耦法迭代次数: \", fd_results.iterations)\n\n# 使用直流潮流法\ndc_results = rundcpf(case)\nprintln(\"直流潮流计算完成\")\n\n# 比较不同算法的结果\nprintln(\"\\n比较不同算法的结果:\")\nprintln(\"  牛顿-拉夫森法总损耗: \", sum(nr_results.branch[:, PL]), \" MW\")\nprintln(\"  快速解耦法总损耗: \", sum(fd_results.branch[:, PL]), \" MW\")\nprintln(\"  直流潮流法总损耗: 0 MW (直流潮流忽略损耗)\")","category":"page"},{"location":"getting_started.html#示例-3：结果可视化","page":"入门指南","title":"示例 3：结果可视化","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"使用 PowerFlowVisualization 模块可以轻松地可视化计算结果：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\nusing PowerFlowVisualization\nusing Plots\n\n# 加载测试系统并计算潮流\ncase = load_case(\"case14.m\")\nresults = runpf(case)\n\n# 绘制电压分布图\nplot_voltage_profile(results)\nsavefig(\"voltage_profile.png\")\n\n# 绘制功率流分布图\nplot_power_flow(results)\nsavefig(\"power_flow.png\")\n\n# 绘制系统拓扑图\nplot_system_topology(case, results)\nsavefig(\"system_topology.png\")\n\nprintln(\"图表已保存到当前目录\")","category":"page"},{"location":"getting_started.html#创建自定义系统","page":"入门指南","title":"创建自定义系统","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"除了使用内置的测试系统，您还可以创建自己的电力系统模型：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\n\n# 创建一个新的案例\ncase = PowerCase()\ncase.baseMVA = 100.0\n\n# 添加母线\n# 格式: [bus_i, bus_type, Pd, Qd, Gs, Bs, area, Vm, Va, baseKV, zone, Vmax, Vmin]\ncase.bus = [\n    1  3  0.0  0.0  0.0  0.0  1  1.06  0.0  230.0  1  1.1  0.9;\n    2  1  100.0  50.0  0.0  0.0  1  1.0  0.0  230.0  1  1.1  0.9;\n    3  1  90.0  30.0  0.0  0.0  1  1.0  0.0  230.0  1  1.1  0.9;\n]\n\n# 添加发电机\n# 格式: [bus, Pg, Qg, Qmax, Qmin, Vg, mBase, status, Pmax, Pmin]\ncase.gen = [\n    1  200.0  0.0  100.0  -100.0  1.06  100.0  1  250.0  10.0;\n]\n\n# 添加支路\n# 格式: [fbus, tbus, r, x, b, rateA, rateB, rateC, ratio, angle, status]\ncase.branch = [\n    1  2  0.01  0.1  0.02  250.0  250.0  250.0  0.0  0.0  1;\n    1  3  0.02  0.2  0.04  150.0  150.0  150.0  0.0  0.0  1;\n    2  3  0.03  0.3  0.06  100.0  100.0  100.0  0.0  0.0  1;\n]\n\n# 执行潮流计算\nresults = runpf(case)\n\n# 显示结果\nif results.success\n    println(\"自定义系统潮流计算成功收敛！\")\n    println(\"  系统总发电: \", sum(results.gen[:, PG]), \" MW\")\n    println(\"  系统总负荷: \", sum(results.bus[:, PD]), \" MW\")\n    println(\"  系统总损耗: \", sum(results.branch[:, PL]), \" MW\")\nelse\n    println(\"潮流计算未收敛，请检查系统参数\")\nend","category":"page"},{"location":"getting_started.html#时间序列分析","page":"入门指南","title":"时间序列分析","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"PowerFlow 库的 TimeSeriesPowerFlow 模块提供了时间序列分析功能：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\nusing TimeSeriesPowerFlow\nusing Plots\n\n# 加载测试系统\ncase = load_case(\"case14.m\")\n\n# 创建24小时负荷曲线（示例数据）\nhours = 1:24\nload_profile = 0.7 .+ 0.3 * sin.((hours .- 10) * π / 12)\n\n# 创建负荷时间序列数据\ntime_series_data = Dict()\nfor t in 1:24\n    # 复制基础案例\n    time_series_data[t] = deepcopy(case)\n    \n    # 调整负荷\n    load_factor = load_profile[t]\n    time_series_data[t].bus[:, PD] = case.bus[:, PD] * load_factor\n    time_series_data[t].bus[:, QD] = case.bus[:, QD] * load_factor\nend\n\n# 执行时间序列潮流计算\nts_results = run_time_series_pf(time_series_data)\n\n# 提取结果\ntotal_load = zeros(24)\ntotal_gen = zeros(24)\ntotal_loss = zeros(24)\n\nfor t in 1:24\n    if ts_results[t].success\n        total_load[t] = sum(ts_results[t].bus[:, PD])\n        total_gen[t] = sum(ts_results[t].gen[:, PG])\n        total_loss[t] = sum(ts_results[t].branch[:, PL])\n    end\nend\n\n# 绘制时间序列结果\nplot(hours, [total_load total_gen total_loss],\n    title = \"24小时系统分析\",\n    xlabel = \"时间(小时)\",\n    ylabel = \"功率(MW)\",\n    label = [\"总负荷\" \"总发电\" \"总损耗\"],\n    marker = [:circle :square :diamond],\n    linewidth = 2,\n    legend = :topleft)\n\nsavefig(\"time_series_analysis.png\")\nprintln(\"时间序列分析图表已保存\")","category":"page"},{"location":"getting_started.html#数据导入与导出","page":"入门指南","title":"数据导入与导出","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"PowerFlow 支持多种数据格式的导入和导出：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\n\n# 从MATPOWER格式导入\ncase = load_case(\"case14.m\")\n\n# 从IEEE通用格式导入\ncase_ieee = load_case(\"ieee14.raw\", \"ieee\")\n\n# 从Excel文件导入\ncase_excel = load_case(\"system_data.xlsx\", \"excel\")\n\n# 导出到MATPOWER格式\nsave_case(case, \"my_case.m\")\n\n# 导出到JSON格式\nsave_case(case, \"my_case.json\", \"json\")\n\n# 导出结果到CSV\nresults = runpf(case)\nexport_results_csv(results, \"results.csv\")","category":"page"},{"location":"getting_started.html#高级选项","page":"入门指南","title":"高级选项","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"PowerFlow 提供了许多高级选项来控制潮流计算的行为：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"using PowerFlow\n\n# 加载测试系统\ncase = load_case(\"case14.m\")\n\n# 设置高级选项\nopt = Dict(\n    \"pf_alg\" => \"NR\",       # 使用牛顿-拉夫森法\n    \"pf_tol\" => 1e-8,       # 设置收敛容差\n    \"max_it\" => 30,         # 最大迭代次数\n    \"verbose\" => 2,         # 详细输出级别\n    \"enforce_q_lims\" => 1,  # 考虑发电机无功限制\n    \"flat_start\" => 0,      # 使用案例中的起始值\n    \"adjust_limits\" => 1    # 调整超出限制的值\n)\n\n# 执行潮流计算\nresults = runpf(case, opt)\n\n# 检查结果\nif results.success\n    println(\"使用高级选项的潮流计算成功收敛！\")\n    println(\"  迭代次数: \", results.iterations)\n    println(\"  最大误差: \", results.max_mismatch)\nelse\n    println(\"潮流计算未收敛\")\nend","category":"page"},{"location":"getting_started.html#常见问题解答","page":"入门指南","title":"常见问题解答","text":"","category":"section"},{"location":"getting_started.html#Q1:-如何处理潮流计算不收敛的情况？","page":"入门指南","title":"Q1: 如何处理潮流计算不收敛的情况？","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"A1: 潮流计算不收敛可能有多种原因，可以尝试以下方法：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"检查系统数据是否正确\n使用平坦起始点（设置 \"flat_start\" => 1）\n增加最大迭代次数（设置 \"max_it\" => 50）\n放宽收敛容差（设置 \"pf_tol\" => 1e-4）\n尝试不同的算法（如 \"pf_alg\" => \"FDXB\"）\n暂时不考虑发电机无功限制（设置 \"enforce_q_lims\" => 0）","category":"page"},{"location":"getting_started.html#Q2:-如何处理大规模系统的性能问题？","page":"入门指南","title":"Q2: 如何处理大规模系统的性能问题？","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"A2: 对于大规模系统，可以考虑以下优化方法：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"使用并行计算（设置 \"parallel\" => 1）\n使用直流潮流作为初步分析（rundcpf）\n对于特别大的系统，考虑使用 GPU 加速（需要 CUDA 支持）\n优化系统的稀疏性处理（设置 \"sparse_solver\" => \"KLU\"）","category":"page"},{"location":"getting_started.html#Q3:-如何将-PowerFlow-与其他工具集成？","page":"入门指南","title":"Q3: 如何将 PowerFlow 与其他工具集成？","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"A3: PowerFlow 可以通过多种方式与其他工具集成：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"导出结果到标准格式（CSV、JSON）供其他工具使用\n使用 Julia 的互操作性与 Python、MATLAB 等语言交互\n通过 HTTP API 提供网络服务（使用 Julia 的 HTTP 包）","category":"page"},{"location":"getting_started.html#下一步","page":"入门指南","title":"下一步","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"恭喜您完成了 PowerFlow 的入门指南！以下是一些建议的后续步骤：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"探索 PowerFlow 模块文档 了解更多核心功能\n学习 TimeSeriesPowerFlow 模块 进行动态系统分析\n尝试 可视化工具 创建漂亮的结果展示\n查看 示例库 获取更多实际应用案例\n参与 社区讨论 分享您的经验和问题","category":"page"},{"location":"getting_started.html#参考资源","page":"入门指南","title":"参考资源","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"PowerFlow GitHub 仓库\n完整 API 文档\nJulia 语言文档\n电力系统分析基础","category":"page"},{"location":"getting_started.html#获取帮助","page":"入门指南","title":"获取帮助","text":"","category":"section"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"如果您在使用 PowerFlow 时遇到问题，可以通过以下渠道获取帮助：","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"GitHub Issues：报告 bug 或提出功能请求\n讨论区：提问或分享想法\n邮件列表：与其他用户和开发者交流","category":"page"},{"location":"getting_started.html","page":"入门指南","title":"入门指南","text":"我们希望 PowerFlow 能够帮助您更高效地进行电力系统分析！","category":"page"},{"location":"index.html#DistributionPowerFlow-库文档","page":"首页","title":"DistributionPowerFlow 库文档","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"欢迎使用 PowerFlow 库，这是一个用于电力系统潮流计算和分析的高性能 Julia 工具包。本库提供了全面的功能，从基础的潮流计算到高级的时间序列分析和可视化，旨在满足研究人员、工程师和教育工作者的需求。","category":"page"},{"location":"index.html#功能概述","page":"首页","title":"功能概述","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"DistributionPowerFlow 库提供以下核心功能：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"基础潮流计算：支持交流潮流、直流潮流和线性分布潮流计算\n高级算法：实现了牛顿-拉夫森法、快速解耦法、高斯-赛德尔法等多种求解算法\n时间序列分析：支持基于时间序列的潮流计算和动态分析\n可再生能源集成：内置对光伏发电、风力发电等可再生能源的建模支持\n经济调度：提供动态经济调度和考虑网络约束的最优潮流计算\n混合交直流系统：支持混合交直流系统的建模与计算\n数据可视化：丰富的可视化工具，用于结果展示和系统分析\n大规模系统支持：针对大规模电力系统的高性能计算优化","category":"page"},{"location":"index.html#安装指南","page":"首页","title":"安装指南","text":"","category":"section"},{"location":"index.html#系统要求","page":"首页","title":"系统要求","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"Julia 1.6 或更高版本\n支持的操作系统：Windows、macOS、Linux","category":"page"},{"location":"index.html#安装步骤","page":"首页","title":"安装步骤","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"使用 Julia 的包管理器安装 DistributionPowerFlow 库：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"using Pkg\nPkg.add(\"PowerFlow\")","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"要安装完整的工具包（包括时间序列分析和可视化模块）：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"using Pkg\nPkg.add([\"PowerFlow\", \"TimeSeriesPowerFlow\", \"PowerFlowVisualization\"])","category":"page"},{"location":"index.html#快速入门","page":"首页","title":"快速入门","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"以下是一个简单的例子，展示如何加载测试系统并执行潮流计算：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"using PowerFlow\n\n# 加载 IEEE 14 节点测试系统\ncase = load_case(\"case14.m\")\n\n# 执行交流潮流计算\nresults = runpf(case)\n\n# 检查结果\nif results.success\n    println(\"潮流计算成功收敛！\")\n    println(\"系统总发电: $(sum(results.gen[:, PG])) MW\")\n    println(\"系统总负荷: $(sum(results.bus[:, PD])) MW\")\n    println(\"系统总损耗: $(sum(results.branch[:, PL])) MW\")\nelse\n    println(\"潮流计算未收敛，请检查系统参数\")\nend","category":"page"},{"location":"index.html#库结构","page":"首页","title":"库结构","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"PowerFlow 库由以下主要模块组成：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"PowerFlow：核心模块，提供基础潮流计算功能\nTimeSeriesPowerFlow：时间序列分析模块，用于动态系统分析\nComponentModel：电力系统组件建模模块\nUtils：实用工具和辅助函数\nVisualization：结果可视化和图形生成工具","category":"page"},{"location":"index.html#文档导航","page":"首页","title":"文档导航","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"基础教程：入门级教程，介绍基本概念和功能\nPowerFlow 模块：核心潮流计算模块的详细文档\nTimeSeriesPowerFlow 模块：时间序列分析模块的详细文档\n可视化工具：可视化功能的详细文档\nAPI 参考：完整的 API 参考文档\n示例：各种应用场景的示例代码","category":"page"},{"location":"index.html#示例概览","page":"首页","title":"示例概览","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"PowerFlow 库提供了丰富的示例，帮助用户快速上手：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"基础潮流计算：展示如何执行和分析基本的潮流计算\n时间序列分析：演示如何进行基于时间序列的系统分析\n可再生能源集成：说明如何在系统中集成可再生能源\n经济调度：展示如何执行经济调度和最优潮流计算\n混合交直流系统：演示如何处理混合交直流系统\n大规模系统：针对大规模系统的计算优化示例\n可视化应用：展示各种可视化功能的应用","category":"page"},{"location":"index.html#支持的文件格式","page":"首页","title":"支持的文件格式","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"PowerFlow 库支持多种电力系统数据格式：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"MATPOWER 格式：兼容 MATPOWER 的 .m 文件格式\nIEEE 通用格式：支持 IEEE 通用数据格式\nPSS/E 格式：支持 PSS/E 的 .raw 文件格式\n自定义 JSON 格式：支持基于 JSON 的自定义数据格式\nExcel 格式：支持从 Excel 文件导入数据","category":"page"},{"location":"index.html#性能优化","page":"首页","title":"性能优化","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"PowerFlow 库针对性能进行了多方面优化：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"并行计算：利用多核处理器加速计算\n稀疏矩阵：高效的稀疏矩阵算法\nGPU 加速：支持 GPU 加速大规模系统计算\n自适应算法：根据系统特性自动选择最优算法","category":"page"},{"location":"index.html#贡献指南","page":"首页","title":"贡献指南","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"我们欢迎社区贡献，无论是功能改进、bug 修复还是文档更新。请参考以下步骤：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"Fork 项目仓库\n创建您的功能分支 (git checkout -b feature/amazing-feature)\n提交您的更改 (git commit -m 'Add some amazing feature')\n推送到分支 (git push origin feature/amazing-feature)\n打开 Pull Request","category":"page"},{"location":"index.html#引用","page":"首页","title":"引用","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"如果您在研究中使用了 PowerFlow 库，请引用：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"@software{PowerFlow2023,\n  author = {PowerFlow Development Team},\n  title = {PowerFlow: A High-Performance Power Flow Analysis Library in Julia},\n  year = {2023},\n  url = {https://github.com/powerflow/PowerFlow.jl}\n}","category":"page"},{"location":"index.html#许可证","page":"首页","title":"许可证","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"PowerFlow 库采用 MIT 许可证。详情请参见 LICENSE 文件。","category":"page"},{"location":"index.html#联系方式","page":"首页","title":"联系方式","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"项目主页：https://github.com/powerflow/PowerFlow.jl\n文档：https://powerflow.github.io/docs\n问题报告：https://github.com/powerflow/PowerFlow.jl/issues\n邮件列表：powerflow-users@googlegroups.com","category":"page"},{"location":"index.html#致谢","page":"首页","title":"致谢","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"PowerFlow 库的开发得到了以下机构和项目的支持：","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"国家自然科学基金委员会\n国家重点研发计划\n电力系统仿真与优化实验室\nJulia 开源社区","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"我们也感谢所有为项目做出贡献的开发者和用户。","category":"page"},{"location":"index.html#更新日志","page":"首页","title":"更新日志","text":"","category":"section"},{"location":"index.html#v1.2.0-(2023-06-15)","page":"首页","title":"v1.2.0 (2023-06-15)","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"新增混合交直流系统支持\n改进时间序列分析性能\n增强可视化功能\n修复多个 bug","category":"page"},{"location":"index.html#v1.1.0-(2023-03-10)","page":"首页","title":"v1.1.0 (2023-03-10)","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"新增经济调度模块\n新增可再生能源集成支持\n改进大规模系统计算性能\n更新文档和示例","category":"page"},{"location":"index.html#v1.0.0-(2022-12-01)","page":"首页","title":"v1.0.0 (2022-12-01)","text":"","category":"section"},{"location":"index.html","page":"首页","title":"首页","text":"首次正式发布\n实现核心潮流计算功能\n提供基础时间序列分析\n包含基本可视化工具","category":"page"},{"location":"index.html","page":"首页","title":"首页","text":"查看完整的更新历史，请访问 CHANGELOG.md。","category":"page"},{"location":"api/overview.html#DistributionPowerFlow-库-API-概述文档","page":"概述","title":"DistributionPowerFlow 库 API 概述文档","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"DistributionPowerFlow 是一个全面的电力系统分析库，提供了从基础组件建模到高级时间序列分析的完整功能集。该库由四个核心模块组成，每个模块专注于电力系统分析的不同方面。","category":"page"},{"location":"api/overview.html#模块结构","page":"概述","title":"模块结构","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"DistributionPowerFlow 库由以下四个主要模块组成：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"ComponentModel - 电力系统组件建模\nPowerFlow - 潮流计算核心功能\nTimeSeriesPowerFlow - 时间序列潮流分析\nUtils - 辅助工具和功能","category":"page"},{"location":"api/overview.html#主要特性","page":"概述","title":"主要特性","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"支持平衡和不平衡电力系统分析\n混合交直流系统建模和计算\n时间序列潮流计算和动态调度\n可再生能源集成分析\n结果可视化和违例分析\nCPU和GPU加速计算","category":"page"},{"location":"api/overview.html#模块功能概览","page":"概述","title":"模块功能概览","text":"","category":"section"},{"location":"api/overview.html#ComponentModel-模块","page":"概述","title":"ComponentModel 模块","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"ComponentModel 模块提供了电力系统组件的数据结构和基本操作。","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"主要组件：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"Bus - 交流母线节点\nBusDC - 直流母线节点\nLine - 交流线路\nLineDC - 直流线路\nGenerator - 发电机\nLoad - 负荷\nConverter - 换流器","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"示例用法：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"using ComponentModel\n\n# 创建母线\nbus = Bus(1, \"Bus1\", 110.0, \"PQ\", \"A1\", \"Z1\", true, 1.0, 0.0)\n\n# 创建线路\nline = Line(1, \"Line1\", 1, 2, 10.0, 0.1, 0.4, 10.0)","category":"page"},{"location":"api/overview.html#PowerFlow-模块","page":"概述","title":"PowerFlow 模块","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"PowerFlow 模块实现了多种潮流计算算法，是库的核心计算引擎。","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"主要功能：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"runpf() - 交流潮流计算\nrundcpf() - 直流潮流计算\nrunupf() - 不平衡潮流计算","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"示例用法：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"using PowerFlow\n\n# 加载案例\ncase = load_case(\"case14.m\")\n\n# 执行交流潮流计算\nresults = runpf(case)\n\n# 执行直流潮流计算\ndc_results = rundcpf(case)","category":"page"},{"location":"api/overview.html#TimeSeriesPowerFlow-模块","page":"概述","title":"TimeSeriesPowerFlow 模块","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"TimeSeriesPowerFlow 模块扩展了基本潮流计算，支持时间序列分析和动态调度。","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"主要功能：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"runtdpf() - 时间序列潮流计算\nrun_dynamic_dispatch() - 动态经济调度\nrunlindistflow() - 线性分布潮流计算\n结果可视化函数","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"示例用法：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"using TimeSeriesPowerFlow\n\n# 执行时间序列潮流计算\nresults = runtdpf(case, \"load_data.xlsx\", \"irradiance_data.xlsx\")\n\n# 分析结果\nplot_voltage_time_series(results, case, 1)","category":"page"},{"location":"api/overview.html#Utils-模块","page":"概述","title":"Utils 模块","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"Utils 模块提供了各种辅助功能，支持其他模块的操作。","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"主要功能：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"ext2int()/int2ext() - 内部/外部编号转换\nfind_islands()/extract_islands() - 孤岛识别与提取\nmerge_virtual_nodes() - 虚拟节点处理","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"示例用法：","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"using Utils\n\n# 转换为内部编号\ninternal_case, i2e = ext2int(case)\n\n# 识别孤岛\nislands_info = find_islands(case)","category":"page"},{"location":"api/overview.html#典型工作流程","page":"概述","title":"典型工作流程","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"系统建模：使用 ComponentModel 模块创建或导入电力系统模型\n基本潮流分析：使用 PowerFlow 模块进行静态潮流计算\n时间序列分析：使用 TimeSeriesPowerFlow 模块进行动态分析\n结果处理：使用 Utils 模块和可视化函数分析结果","category":"page"},{"location":"api/overview.html#系统要求","page":"概述","title":"系统要求","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"Julia 1.6 或更高版本\n支持的操作系统: Windows, macOS, Linux\n可选: CUDA工具包（用于GPU加速）","category":"page"},{"location":"api/overview.html#安装方法","page":"概述","title":"安装方法","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"通过Julia的包管理器安装:","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"using Pkg\nPkg.add(\"DistributionPowerFlow\")","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"或者在Julia REPL的包管理模式中安装:","category":"page"},{"location":"api/overview.html","page":"概述","title":"概述","text":"] add DistributionPowerFlow","category":"page"},{"location":"api/overview.html#快速入门示例","page":"概述","title":"快速入门示例","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"# 导入所需模块\nusing PowerFlow\nusing TimeSeriesPowerFlow\nusing Utils\n\n# 加载案例数据\ncase = load_case(\"case14.m\")\n\n# 执行潮流计算\npf_results = runpf(case)\n\n# 执行时间序列潮流计算\nts_results = runtdpf(case, \"load_data.xlsx\")\n\n# 分析结果\nplot_voltage_time_series(ts_results, case, 1)\nplot_losses_time_series(ts_results, case, 1)","category":"page"},{"location":"api/overview.html#文档和资源","page":"概述","title":"文档和资源","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"完整API文档: [链接到文档]\n示例库: [链接到示例]\n问题报告: [链接到问题跟踪器]","category":"page"},{"location":"api/overview.html#许可证","page":"概述","title":"许可证","text":"","category":"section"},{"location":"api/overview.html","page":"概述","title":"概述","text":"DistributionPowerFlow 库在 [许可证名称] 下发布。详情请参阅 LICENSE 文件。","category":"page"}]
}
